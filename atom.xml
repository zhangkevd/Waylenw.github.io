<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Waylenw's BLog]]></title>
  <subtitle><![CDATA[天才向左,疯子向右。-----------------移动互联网、摄影。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://waylenw.github.io/"/>
  <updated>2016-01-04T10:06:37.000Z</updated>
  <id>http://waylenw.github.io/</id>
  
  <author>
    <name><![CDATA[Waylenw]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Android开发教程完全]]></title>
    <link href="http://waylenw.github.io/android-dev-teacher/"/>
    <id>http://waylenw.github.io/android-dev-teacher/</id>
    <published>2016-01-04T10:06:37.000Z</published>
    <updated>2016-01-04T10:06:37.000Z</updated>
    <content type="html"><![CDATA[<p> <strong>不定时更新</strong></p>
<blockquote>
<p>本博客的所链接的文章不全是原创。很多是写的非常好的博客。所以本博客主要是收集Android开发教程优秀的博客。以下是推荐初学者学习和了解Android开发的的链接</p>
</blockquote>
<p><a href="http://stormzhang.com/android/2014/07/07/learn-android-from-rookie/" target="_blank" rel="external">Android学习之路</a><br><a href="http://blog.csdn.net/singwhatiwanna/article/details/49560409" target="_blank" rel="external">Android学习路线指南</a><br><a href="http://blog.csdn.net/xyz_lmn/article/details/41411355" target="_blank" rel="external">Android知识图谱</a><br><a href="http://hukai.me/android-training-course-in-chinese/index.html" target="_blank" rel="external">Android官方培训课程中文版</a></p>
<h2 id="系统架构">系统架构</h2><p> <a href="http://blog.csdn.net/github_25928675/article/details/49680541" target="_blank" rel="external">Android系统源码基础知识讲解</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/49560045" target="_blank" rel="external">Android ART运行时相关</a></p>
<h2 id="Android控件">Android控件</h2><p> <a href="http://blog.csdn.net/github_25928675/article/details/46564229" target="_blank" rel="external">Android主题和样式</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/46682141" target="_blank" rel="external">Android控件属性大全</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/45745093" target="_blank" rel="external">Anddroid WebView的讲解</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/49949213" target="_blank" rel="external">ListView的完全讲解</a><br> <a href="http://blog.csdn.net/column/details/xiaoshuang-ui.html" target="_blank" rel="external">Android UI设计博客专栏</a><br> <strong>事件</strong><br> <a href="http://blog.csdn.net/lmj623565791/article/details/39102591" target="_blank" rel="external">Android ViewGroup事件分发</a><br> <a href="http://blog.csdn.net/guolin_blog/article/details/9097463" target="_blank" rel="external">Android事件分发机制(上)</a><br> <a href="http://blog.csdn.net/guolin_blog/article/details/9153747" target="_blank" rel="external">Android事件分发机制(下)</a><br> <a href="http://blog.csdn.net/bboyfeiyu/article/details/39719543" target="_blank" rel="external">Android ViewGroup拦截触摸事件</a><br> <strong>View</strong><br> <a href="http://blog.csdn.net/wangbofei/article/details/7795430" target="_blank" rel="external">Android getWidth和getMeasuredWidth的正解</a><br> <a href="http://www.open-open.com/lib/view/open1328836804515.html" target="_blank" rel="external">Android例子:根据需求自定义控件</a><br> <a href="http://www.linuxidc.com/Linux/2011-12/49307.htm" target="_blank" rel="external">Android Path类的使用</a></p>
<h2 id="资源文件">资源文件</h2><p>  <a href="http://blog.csdn.net/github_25928675/article/details/50330635" target="_blank" rel="external">Android颜色透明度对应的开头字母</a><br>  <a href="http://blog.csdn.net/github_25928675/article/details/46650183" target="_blank" rel="external">Android xml资源文件中@、@android:type、@*、？、@+含义和区别</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/46366173" target="_blank" rel="external">AndroidManifest.xml文件讲解</a><br> <a href="http://blog.csdn.net/lmj623565791/article/details/48649563" target="_blank" rel="external">Android状态栏变色</a><br> <a href="http://www.tinylab.org/android-loading-a-different-relationship-between-dpi-and-memory-consumption-of-resources/" target="_blank" rel="external">Android 加载不同 DPI 资源与内存消耗间的关系</a></p>
<h2 id="四大组件">四大组件</h2><p>  <strong>Activity</strong><br> <a href="http://blog.csdn.net/liuhe688/article/details/6733407" target="_blank" rel="external">Activity生命周期</a> <a href="http://blog.csdn.net/github_25928675/article/details/46049045" target="_blank" rel="external">Activity的启动模式</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/49452183" target="_blank" rel="external">Activity界面切换动画讲解</a><br> <a href="http://www.cnblogs.com/xiajf/p/3993599.html" target="_blank" rel="external">Activity OnTrimMemory内存消耗</a><br> <a href="http://www.flakor.cn/2014-09-04-707.html" target="_blank" rel="external">Activity 后台监听</a><br> <a href="http://blog.csdn.net/sheldon4090/article/details/7785571" target="_blank" rel="external">Activity 电话监听</a><br> <a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0822/3344.html" target="_blank" rel="external">Activity 软键盘弹出效果完全讲解</a><br> <strong>Intent</strong><br> <a href="http://blog.csdn.net/github_25928675/article/details/45333253" target="_blank" rel="external">Android Intent调用系统操作</a><br> <a href="http://blog.csdn.net/yuzhiboyi/article/details/8484771" target="_blank" rel="external">Android pendingIntent的使用和讲解</a><br> <a href="http://blog.csdn.net/zeng622peng/article/details/6180190" target="_blank" rel="external">Android intent和PendingIntent的区别</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/50358912" target="_blank" rel="external">Android启动多个后台任务预览视图</a><br> <strong>service</strong><br> <a href="http://blog.csdn.net/android_tutor/article/details/5789203" target="_blank" rel="external">Android Service生命周期及用法</a><br> <a href="http://blog.csdn.net/lmj623565791/article/details/47143563" target="_blank" rel="external">IntentService的使用和讲解</a><br><a href="http://blog.csdn.net/mad1989/article/details/22492519" target="_blank" rel="external">Android service如何不被杀死</a><br><strong>BroadCast</strong><br><a href="http://blog.csdn.net/yuanzeyao/article/details/43052517" target="_blank" rel="external">BroadCast内部机制讲解</a></p>
<h2 id="数据存储和网络请求">数据存储和网络请求</h2><p> <a href="http://blog.csdn.net/wenwen091100304/article/details/49050277" target="_blank" rel="external">数据存储方式之Shareprefences</a><br> <a href="http://www.liaohuqiu.net/cn/posts/storage-in-android/" target="_blank" rel="external">Android存储路径完全讲解</a><br> <a href="http://blog.csdn.net/loongggdroid/article/details/12304695" target="_blank" rel="external">Android SD卡存储容量相关讲解</a>、<br><strong>网络请求</strong><br><a href="http://blog.csdn.net/u010590685/article/details/49104875" target="_blank" rel="external">Android访问https</a><br><a href="http://www.cnblogs.com/hanyonglu/archive/2012/02/20/2358801.html" target="_blank" rel="external">Android实现网络多线程断点续传下载</a></p>
<h2 id="多媒体">多媒体</h2><p> <a href="http://blog.csdn.net/github_25928675/article/details/49181907" target="_blank" rel="external">Android音频播放讲解</a><br> <a href="http://blog.csdn.net/peijiangping1989/article/details/7042610" target="_blank" rel="external">Android音频录制</a><br> <a href="http://blog.csdn.net/peijiangping1989/article/details/7049991" target="_blank" rel="external">Android视频录制</a><br> <a href="http://www.open-open.com/lib/view/open1341754267229.html" target="_blank" rel="external">Android视频播放的三种方式</a><br> <a href="http://www.devwiki.net/2015/09/20/Android-Music-Play-Mode/#comments" target="_blank" rel="external">Android音乐播放模式切换-外放、听筒、耳机</a><br> <a href="http://blog.csdn.net/shineflowers/article/details/48031873" target="_blank" rel="external">Android MediaMetadataRetriever获得媒体信息</a></p>
<h2 id="多线程">多线程</h2><p> <a href="http://blog.csdn.net/yuzhiboyi/article/details/7562245" target="_blank" rel="external">Handler讲解之基本使用(一)</a><br> <a href="http://blog.csdn.net/yuzhiboyi/article/details/7562254" target="_blank" rel="external">Handler讲解之sendMessage(二)</a><br> <a href="http://blog.csdn.net/yuzhiboyi/article/details/7562259" target="_blank" rel="external">Handler讲解之异步任务操作(三)</a><br> <a href="http://blog.csdn.net/lmj623565791/article/details/47079737" target="_blank" rel="external">HandlerThread讲解</a><br> <a href="http://blog.csdn.net/yanbober/article/details/48861457" target="_blank" rel="external">Loader的全面讲解及源码浅析</a><br> <a href="http://blog.csdn.net/hitlion2008/article/details/7560878" target="_blank" rel="external">AysnTask基本使用介绍</a><br> <a href="http://blog.csdn.net/guolin_blog/article/details/11711405" target="_blank" rel="external">AysnTask机制从源码角度讲解</a><br> <a href="http://get.ftqq.com/6333.get" target="_blank" rel="external">AsyncTask的存在的缺陷</a><br> <a href="http://blog.csdn.net/hitlion2008/article/details/7983449" target="_blank" rel="external">AsyncTask的验证</a><br> <strong>优化</strong><br> <a href="http://blog.csdn.net/github_25928675/article/details/47259097" target="_blank" rel="external">Android 线程池的使用和讲解</a><br><a href="http://droidyue.com/blog/2015/09/05/android-process-and-thread-schedule-nice/" target="_blank" rel="external">线程优先级讲解</a><br> <strong>案例</strong><br> <a href="http://blog.csdn.net/github_25928675/article/details/47702303" target="_blank" rel="external">Android计时和倒计时</a></p>
<h2 id="绘制和动画">绘制和动画</h2><h2 id="权限和动作">权限和动作</h2><p> <a href="http://blog.csdn.net/github_25928675/article/details/46460417" target="_blank" rel="external">权限和动作大全</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/45916267" target="_blank" rel="external">自定义权限</a></p>
<h2 id="软键盘输入法">软键盘输入法</h2><p> <a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0822/3344.html" target="_blank" rel="external">软键盘遮挡问题</a></p>
<h2 id="进阶篇">进阶篇</h2><p> <strong>性能优化</strong><br> <a href="http://blog.csdn.net/zhuanglonghai/article/details/38233069" target="_blank" rel="external">Android Handler内存泄露优化</a><br> <a href="http://waylenw.github.io/Android/android-bitmap-memory-yh/">Android Bitmap内存优化</a><br> <a href="http://blog.csdn.net/yanbober/article/details/48394201" target="_blank" rel="external">Android应用开发性能优化完全分析</a><br> <strong>适配和兼容</strong><br> <a href="http://blog.csdn.net/zhaokaiqiang1992/article/details/45419023" target="_blank" rel="external">Android屏幕适配全攻略</a><br> <a href="http://waylenw.github.io/Android/android-sdk-verion/">Android SDK版本和兼容包讲解</a> </p>
<h2 id="开发工具">开发工具</h2><p> <a href="http://waylenw.github.io/AndroidStudio/android-studio-control-teacher/">Android studio使用教程</a><br> <a href="http://www.oschina.net/news/68890/15-android-option" target="_blank" rel="external">Android 15个必知的Android开发者选项</a></p>
<h2 id="Android系统信息和安全机制">Android系统信息和安全机制</h2><p> <a href="http://blog.csdn.net/xinzheng_wang/article/details/7837550" target="_blank" rel="external">Android 系统CPU,RAM,ROM,SDCard,MAC等信息查询</a><br> <a href="http://blog.csdn.net/vipzjyno1/article/details/21039349/" target="_blank" rel="external">Android Apk反编译</a><br> <a href="http://blog.csdn.net/jiangwei0910410003/article/details/50402000" target="_blank" rel="external">Android签名机制之—签名过程详解</a></p>
<h2 id="开源框架">开源框架</h2><p> <strong>RxJava</strong><br> <a href="http://blog.csdn.net/meegomeego/article/details/49155989" target="_blank" rel="external">给Android开发的RxJava详解</a><br> <a href="http://www.jianshu.com/p/72911b9ba2d7" target="_blank" rel="external">RxJava在正确的线程上运行</a><br> <strong>React-native</strong></p>
<h2 id="实战">实战</h2><p> <strong>架构设计</strong><br> <a href="http://www.jianshu.com/p/ea48332c82af" target="_blank" rel="external">《App研发录》落地之项目架构以及管理</a><br> <a href="http://www.devtf.cn/?p=1134" target="_blank" rel="external">面向对象六大原则</a><br> <strong>项目管理</strong></p>
<p> <strong>经验</strong><br> <a href="http://www.devtf.cn/?p=941" target="_blank" rel="external">开发前你需要知道的六件事</a><br> <a href="https://github.com/futurice/android-best-practices/blob/master/translations/Chinese/README.cn.md" target="_blank" rel="external">Android开发最佳实践</a><br> <a href="http://www.jianshu.com/p/d6611c8bd45c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=pc_author_hots&amp;utm_source=recommendation#" target="_blank" rel="external">Android开发经验谈</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/48161147" target="_blank" rel="external">如何更新SDK?</a></p>
<h2 id="学习资源">学习资源</h2><p> <a href="https://www.youtube.com/channel/UC_x5XG1OV2P6uZZ5FSM9Ttw" target="_blank" rel="external">Android google开发者频道(Youtube)</a><br> <a href="https://www.youtube.com/channel/UCQqa5UIHtrnpiADC3eHFupw" target="_blank" rel="external">Android gooogle中文开发者频道(Youtube    )</a></p>
<h2 id="课外了解">课外了解</h2><p> <a href="http://pcedu.pconline.com.cn/688/6883561.html" target="_blank" rel="external">Android国内的APP现状</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> <strong>不定时更新</strong></p>
<blockquote>
<p>本博客的所链接的文章不全是原创。很多是写的非常好的博客。所以本博客主要是收集Android开发教程优秀的博客。以下是推荐初学者学习和了解Android开发的的链接</p>
</block]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
      <category term="博客精华" scheme="http://waylenw.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%B2%BE%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android SDK版本与兼容包相关]]></title>
    <link href="http://waylenw.github.io/Android/android-sdk-verion/"/>
    <id>http://waylenw.github.io/Android/android-sdk-verion/</id>
    <published>2016-01-04T09:58:08.000Z</published>
    <updated>2016-01-04T09:58:08.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>Android开发的童鞋们都知道，Google的碎片化是很严重的，所以官方提供了兼容包去试配一些低版本的机器。并且兼容包也在更新，除此之外，Android的SDK版本更新也十分的快速，基本上是一年发一个大的版本号。而且Api的变更也十分大，但是很多时候对这些变更感到无从下手。以下链接的这篇文章对SDK版本更新的内容都会有一个汇总。相信你可以很快熟悉各版本之间的差异。</p>
</blockquote>
<h1 id="SDK版本相关">SDK版本相关</h1><blockquote>
<p><a href="https://developer.android.com/intl/zh-cn/sdk/api_diff/23/changes.html" target="_blank" rel="external">官方SDK版本Api变动列表:(6.0为例)</a></p>
</blockquote>
<h2 id="4-X">4.X</h2><p> <a href="http://my.oschina.net/u/1175378/blog/143448?fromerr=px75uTtO" target="_blank" rel="external">Android 4.1 API官方文档详解</a></p>
<h2 id="5-X">5.X</h2><p> <a href="http://blog.csdn.net/github_25928675/article/details/46648381" target="_blank" rel="external">Android 5.0 Api的变化</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/46344791" target="_blank" rel="external">Android 5.0 camera2Api的使用</a><br> <a href="http://wuxiaolong.me/2015/08/03/Palette/" target="_blank" rel="external">Android Palette取色器</a><br> <a href="http://blog.csdn.net/xu_fu/article/details/44004841" target="_blank" rel="external">VectorDrawable与SVG</a></p>
<h2 id="6-X">6.X</h2><p><a href="http://www.race604.com/whats-new-in-android6-0/" target="_blank" rel="external">Android 6.0 中新的新技术</a><br><a href="http://waylenw.github.io/Android/Android-sdk-6-change/">Android 6.0的变化</a><br><a href="http://jijiaxin89.com/2015/08/30/Android-s-Runtime-Permission/" target="_blank" rel="external">运行时权限开发者需要知道的一切</a></p>
<h1 id="兼容库相关">兼容库相关</h1><blockquote>
<p>兼容库和兼容包是什么？兼容库和兼容包是对Android一些更低版本实现高版本的功能所<br>   提供的兼容架包。<br>   <a href="http://developer.android.com/intl/zh-cn/tools/support-library/index.html" target="_blank" rel="external">官方Support Library版本更新汇总</a></p>
</blockquote>
<h2 id="Support-V4">Support-V4</h2><p> 在项目中引入<br> <figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="list">(<span class="quoted">'com</span>.android.support<span class="keyword">:support-v4</span>:<span class="number">13.0</span>.<span class="number">0</span>')</span></span><br></pre></td></tr></table></figure></p>
<p> <a href="http://mp.weixin.qq.com/s?__biz=MzA3MDMyMjkzNg==&amp;mid=212038361&amp;idx=1&amp;sn=ffcb677d058ecd7ff291a8a42d449566&amp;scene=0#rd" target="_blank" rel="external">NestedScrolling 实战:(5.0加入)</a></p>
<h2 id="Android_Design_Support_Library">Android Design Support Library</h2><p> <a href="http://blog.csdn.net/lmj623565791/article/details/46405409" target="_blank" rel="external">NavigationView的实用讲解</a><br> <a href="http://wuxiaolong.me/2015/08/03/TabLayout/" target="_blank" rel="external">TabLayout的使用讲解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>Android开发的童鞋们都知道，Google的碎片化是很严重的，所以官方提供了兼容包去试配一些低版本的机器。并且兼容包也在更新，除此之外，Android的SDK版本更新也十分的快速，基本上是一年发一个大的版本号。而且Api的变更也十分大，但是很多]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android开源项目和轮子]]></title>
    <link href="http://waylenw.github.io/android-all-open-source/"/>
    <id>http://waylenw.github.io/android-all-open-source/</id>
    <published>2016-01-04T09:51:00.000Z</published>
    <updated>2016-01-04T09:51:00.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>此博客初衷是记录一下自己开发过程后使用到或者收集到的一些轮子和开源项目，不追求全，只追求实用吧。会不断的更新,也是希望能继续完善吧。</p>
</blockquote>
<p> 推荐查看<br> <a href="https://github.com/Trinea/android-open-project#%E5%8D%81%E4%BA%8Cflipview" target="_blank" rel="external">Github最全面的Android开源项目汇总</a> </p>
<h1 id="功能框架">功能框架</h1><p><strong>数据库</strong></p>
<ol>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/39122981" target="_blank" rel="external">ORMLite</a></li>
<li><a href="http://blog.csdn.net/krislight/article/details/9391455" target="_blank" rel="external">GreenDaoMaster</a><br><a href="http://blog.csdn.net/u012565107/article/details/21546829" target="_blank" rel="external">ORMLitehe和greenDaoMaster简单性能对比</a></li>
</ol>
<hr>
<p><strong>图片加载</strong></p>
<ul>
<li><a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">ImageLoader</a><br>ImageLoader是目前Android平台上使用数量最多也是最为常见的图片加载框架。<a href="http://blog.csdn.net/github_25928675/article/details/46442037" target="_blank" rel="external">使用讲解</a></li>
<li><a href="https://github.com/square/picasso" target="_blank" rel="external">picasso</a><br>Picasso是美国一家支付公司Square推出的。它的特点是通过复杂的压缩来减少内存的消耗,自带内存和硬盘的二级缓存<a href="http://blog.csdn.net/github_25928675/article/details/46660179" target="_blank" rel="external">使用讲解</a></li>
<li><a href="https://github.com/facebook/fresco" target="_blank" rel="external">Fresco</a><br>Fresco是FaceBook推出的一款图片加载框架。自动释放内存的。<a href="http://www.cnblogs.com/stay/p/4398432.html" target="_blank" rel="external">使用讲解</a></li>
</ul>
<p>框架对比<br><a href="http://stackoverflow.com/questions/29363321/picasso-v-s-imageloader-v-s-fresco-vs-glide" target="_blank" rel="external">Stackoverflow几个框架对比</a><br><a href="http://www.csdn.net/article/2015-10-21/2825984" target="_blank" rel="external">MDCC 2015:三大图片缓存原理、特性对比</a></p>
<hr>
<p><strong>工具类</strong></p>
<ul>
<li><a href="https://github.com/pengwei1024/LogUtils" target="_blank" rel="external">LogUtil</a><br>支持直接打印数据集合,如List、Set、Map、数组</li>
<li><a href="https://github.com/bunnyblue/DroidFix" target="_blank" rel="external">DroidFix</a><br>热修复的工具,修改补丁</li>
</ul>
<p><strong>插件</strong></p>
<ul>
<li><a href="https://github.com/dmytrodanylyk/" target="_blank" rel="external">folding-plug</a><br>布局文件分组</li>
</ul>
<p><strong>依赖注入</strong></p>
<ul>
<li><a href="https://github.com/wyouflf/xUtils" target="_blank" rel="external">xUtils的Viewutils</a></li>
</ul>
<h1 id="View">View</h1><h2 id="Loading">Loading</h2><ul>
<li><a href="https://github.com/dodola/MetaballLoading" target="_blank" rel="external">MetaballLoading</a><br>水滴传递的效果<br><img src="https://raw.githubusercontent.com/dodola/MetaballLoading/master/metaball.gif" alt=""></li>
<li><a href="https://github.com/Kyson/WhorlView" target="_blank" rel="external">WhorlView</a><br>漩涡风格的加载效果<br><img src="http://www.jcodecraeer.com/uploads/150818/1-150QP34Q2261.gif" alt=""></li>
<li><a href="https://github.com/81813780/AVLoadingIndicatorView" target="_blank" rel="external">AVLoadingIndicatorView</a><br>Android Loading动画的一个集合<br><img src="https://raw.githubusercontent.com/81813780/AVLoadingIndicatorView/master/Demo.gif" alt=""></li>
<li><a href="https://github.com/zzz40500/android-shapeLoadingView" target="_blank" rel="external">android-shapeLoadingView仿58loading效果</a><br><img src="https://camo.githubusercontent.com/575b98a56c5546043ec045d044429590e4a623fe/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f3136363836362d376434313538646532636534306139612e676966" alt=""></li>
</ul>
<h2 id="ViewPager">ViewPager</h2><ul>
<li><a href="http://www.apkbus.com/android-243081-1-1.html" target="_blank" rel="external">带有切换的动画的viewpager</a><br><img src="http://data.apkbus.com/5p14141288AU24" alt=""></li>
<li><a href="https://github.com/chenupt/SpringIndicator" target="_blank" rel="external">SpringIndicator</a><br>viewapger指示器，像水滴流动的效果<br><img src="https://raw.githubusercontent.com/chenupt/SpringIndicator/master/img/si_1.0.0.gif" alt=""></li>
<li><a href="https://github.com/matrixxun/ProductTour" target="_blank" rel="external">ProductTour(ViewPager的PageTransformer切换动画)</a><br><img src="https://raw.githubusercontent.com/matrixxun/ProductTour/master/art/run.gif" alt=""></li>
<li><p><a href="https://github.com/kaelaela/VerticalViewPager" target="_blank" rel="external">VerticalViewPager(向上滑动的viewpager,没有衔接效果)</a><br><img src="https://raw.githubusercontent.com/kaelaela/VerticalViewPager/master/art/default.gif" alt=""></p>
<h2 id="指示器">指示器</h2><ul>
<li><a href="https://github.com/H07000223/FlycoTabLayout" target="_blank" rel="external">FlycoTabLayout</a><br>包含两种TabLayout.[SlidingTabLayout是基于<a href="https://github.com/jpardogo/PagerSlidingTabStrip" target="_blank" rel="external">PagerSlidingTabStrip</a>的大量修改，新增了很多自定义的功能。CommonTabLayout:不同于SlidingTabLayout对ViewPager依赖,它是一个不依赖ViewPager可以与其他控件自由搭配使用的TabLayout.<br><img src="https://raw.githubusercontent.com/H07000223/FlycoTabLayout/master/preview_1.gif" alt=""></li>
</ul>
<h2 id="Dialog">Dialog</h2></li>
<li><a href="https://github.com/H07000223/FlycoDialog_Master" target="_blank" rel="external">FlycoDialog</a><br>多种样式与动画效果的对话框<br><img src="https://raw.githubusercontent.com/H07000223/FlycoDialog_Master/master/gif/preview_1.gif" alt=""></li>
</ul>
<h2 id="ListView">ListView</h2><ul>
<li><a href="https://github.com/bavariama1/ListBuddies" target="_blank" rel="external">瀑布流</a></li>
<li><a href="https://github.com/Waylenw/Android-UI-Effect#listindex" target="_blank" rel="external">IndexView</a><br>索引控件可拖动，可根据列表滚动移动<br><img src="https://raw.githubusercontent.com/Waylenwang/AndroidUI_Waylen/master/screenpic/indexView.gif" alt=""></li>
<li><a href="https://github.com/baoyongzhang/SwipeMenuListView" target="_blank" rel="external">SwipeMenuListView(右滑删除)</a><br><img src="https://raw.githubusercontent.com/baoyongzhang/SwipeMenuListView/master/demo3.gif" alt=""></li>
</ul>
<h2 id="侧滑菜单">侧滑菜单</h2><ul>
<li><a href="https://github.com/BlueMor/DragLayout" target="_blank" rel="external">DragLayout 使用 support.v4 包下的 ViewDragHelper 实现 QQ5.0 侧滑</a><br><img src="https://raw.githubusercontent.com/BlueMor/DragLayout/master/screenshots/123.gif" alt="这里写图片描述"></li>
<li><a href="https://github.com/mxn21/FlowingDrawer" target="_blank" rel="external">FlowingDrawer(具有弹性的侧滑菜单)</a><br><img src="http://www.jcodecraeer.com/uploads/151022/1-1510220ZQQ25.gif" alt="这里写图片描述"></li>
</ul>
<h2 id="下拉上拉刷新">下拉上拉刷新</h2><ul>
<li><p><a href="https://github.com/bingoogolapple/BGARefreshLayout-Android" target="_blank" rel="external">BGARefreshLayout-Android多种下拉刷新效果(支持上拉刷新)</a><br><img src="https://camo.githubusercontent.com/f609f7944250a6607e5fdec8b12b3156df569cd7/687474703a2f2f37786b39646a2e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f726566726573686c61796f75742f73637265656e73686f74732f726566726573686c61796f7574312e676966" alt=""></p>
<ul>
<li><a href="https://github.com/cymcsg/UltimateRecyclerView" target="_blank" rel="external">UltimateRecyclerView</a><br>支持ListView、RecycleView上拉刷新以及右滑动删除，支持拖动，动画，和和粘性头部。隐藏和显示Actionbar和ToolBar等<br><img src="https://camo.githubusercontent.com/34707aab637bd5766d183e4bf739e07a589d5aa9/68747470733a2f2f627974656275636b65742e6f72672f6d61727368616c6368656e2f696d616765732f7261772f343462656231363231323163373139656134303934626437656131633966306364376465346330342f756c74696d61746572656379636c6572766965772f756c74696d6174655f72656379636c65727669657731322e676966" alt=""></li>
<li><a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh" target="_blank" rel="external">Ultra-Pull-To-Refresh</a><br>此库是单纯的下拉刷新的组件,使用起来简单，<code>API LEVEL &gt;= 8</code>可以ui样式十分的简单。还有md风格的下拉刷新样式哦。<br><img src="https://camo.githubusercontent.com/4dfccd5a50f7d59b512300fce341a1217950603a/687474703a2f2f737261696e2d6769746875622e71696e6975646e2e636f6d2f756c7472612d7074722f6d6174657269616c2d7374796c652e676966" alt=""></li>
</ul>
<h2 id="MD">MD</h2></li>
<li><a href="https://github.com/drakeet/MaterialDialog" target="_blank" rel="external">MD风格的dialog</a></li>
<li><a href="https://github.com/rey5137/material" target="_blank" rel="external">Md风格组件的集合</a></li>
<li><a href="https://github.com/siriscac/RippleView" target="_blank" rel="external">RippleView</a><br>兼容低版本的水波纹控件<br><img src="https://camo.githubusercontent.com/eec41193900aad4803dcf18bc9915fafa3f7d1cf/68747470733a2f2f7261772e6769746875622e636f6d2f73697269736361632f526970706c65566965772f6d61737465722f53637265656e732f53637265656e2e676966" alt=""></li>
<li><p><a href="https://github.com/nbsp-team/MaterialFilePicker" target="_blank" rel="external">MaterialFilePicker</a><br>MD风格的文件选择器</p>
<h2 id="效果实现">效果实现</h2></li>
<li><a href="https://github.com/mxn21/SlidingCard" target="_blank" rel="external">SlidingCard相册的效果</a><br><img src="https://raw.githubusercontent.com/mxn21/SlidingCard/master/screen.gif" alt=""></li>
<li><a href="https://github.com/gpfduoduo/RadarScanView" target="_blank" rel="external">雷达扫描的效果</a><br><img src="https://raw.githubusercontent.com/gpfduoduo/RadarScanView/master/RadarScanView/gif/radar.gif" alt=""></li>
</ul>
<h1 id="动画">动画</h1><ul>
<li><a href="https://github.com/jaychou2012/SwitchLayout" target="_blank" rel="external">SwitchLayout 视图切换动画</a></li>
<li><a href="https://github.com/sd6352051/NiftyDialogEffects" target="_blank" rel="external">NiftyDialogEffects 支持自定义飞入动画样式的 Dialog</a><br><img src="https://camo.githubusercontent.com/456687ac516bb07f1076928d635bfddf6b90d5ec/687474703a2f2f696d67302e70682e3132362e6e65742f69433436653162586b55316631724966555a6f3939773d3d2f363539373632303632313938343031393430382e676966" alt=""><ul>
<li><a href="https://github.com/daimajia/AndroidViewAnimations" target="_blank" rel="external">AndroidViewAnimations</a><br>View 动画的Android库</li>
</ul>
</li>
</ul>
<h1 id="图像处理">图像处理</h1><ul>
<li><a href="https://github.com/jaychou2012/ImageBlurring" target="_blank" rel="external">ImageBlurring图像模糊</a></li>
<li><p><a href="https://github.com/cooltechworks/BitmapMerger" target="_blank" rel="external">BitmapMerger图片合成</a><br><img src="https://cloud.githubusercontent.com/assets/13122232/8438305/9f7c2644-1f82-11e5-8f51-25ba7cca0711.gif" alt="这里写图片描述"></p>
<h1 id="功能应用">功能应用</h1></li>
<li><a href="http://wister.iteye.com/blog/334562" target="_blank" rel="external">pinyin4j的使用(汉字转拼音)</a></li>
<li><a href="https://git.oschina.net/xiao-lifan/MutiPhotoChoser" target="_blank" rel="external">MutiPhotoChoser</a><br>自定义相册多图选择</li>
<li><a href="https://github.com/bboyfeiyu/Colorful" target="_blank" rel="external">Colorful</a><br>实现了换肤的功能。</li>
<li><a href="https://github.com/sevenler/Uninstall_Statics" target="_blank" rel="external">Apk统计自身被卸载</a></li>
<li><p><a href="https://github.com/kymjs/EmojiChat" target="_blank" rel="external">Emoji表情的实现</a><br><img src="https://raw.githubusercontent.com/kymjs/EmojiChat/master/screen_shots/Screenshot_2.png" alt=""></p>
<h2 id="图表">图表</h2><p><a href="https://github.com/diogobernardino/WilliamChart" target="_blank" rel="external">WilliamChart</a></p>
<h1 id="Demo">Demo</h1><ul>
<li><a href="https://github.com/stormzhang/9GAG" target="_blank" rel="external">9GAG(整合一些轮子的案例)</a></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>此博客初衷是记录一下自己开发过程后使用到或者收集到的一些轮子和开源项目，不追求全，只追求实用吧。会不断的更新,也是希望能继续完善吧。</p>
</blockquote>
<p> 推荐查看<br> <a href="https://github.co]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
      <category term="博客精华" scheme="http://waylenw.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%B2%BE%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio使用教程]]></title>
    <link href="http://waylenw.github.io/AndroidStudio/android-studio-control-teacher/"/>
    <id>http://waylenw.github.io/AndroidStudio/android-studio-control-teacher/</id>
    <published>2016-01-04T09:50:39.000Z</published>
    <updated>2016-01-04T09:50:39.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>推荐链接<br>   <a href="http://www.android-studio.org/" target="_blank" rel="external">Android studio中文社区</a><br>   <a href="http://android.jobbole.com/81687/?url_type=39&amp;object_type=webpage&amp;pos=1" target="_blank" rel="external">倍数提高工作效率的 Android Studio 奇技</a></p>
</blockquote>
<h2 id="历史">历史</h2><p><a href="http://www.jcodecraeer.com/a/anzhuokaifa/Android_Studio/2015/0804/3258.html" target="_blank" rel="external">Android studio1.3新特性</a><br><a href="http://blog.csdn.net/crazy1235/article/details/49747141#vectordrawable" target="_blank" rel="external">Android studio1.4新特性</a></p>
<h2 id="基本操作">基本操作</h2><p> <a href="http://blog.csdn.net/ryantang03/article/details/8941364" target="_blank" rel="external">Android studio的基础使用教程一</a></p>
<h2 id="工具配置">工具配置</h2><p> <a href="http://waylenw.github.io/AndroidStudio/android-studio-logcat-highlight/">Android studio logcat高亮</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/49763473" target="_blank" rel="external"> Android studio mac 快捷键</a></p>
<h2 id="项目构建">项目构建</h2><p> <a href="http://blog.csdn.net/github_25928675/article/details/46423571" target="_blank" rel="external">Android Studio导入Eclipse项目</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/46423293" target="_blank" rel="external">Android Studio导入AS项目(出现的问题) </a><br> <a href="http://www.jianshu.com/p/a0b4c4691407" target="_blank" rel="external">Android Studio使用jni、so库</a><br> <a href="http://blog.csdn.net/github_25928675/article/details/46728385" target="_blank" rel="external">Android Studio开发JNI工程</a> </p>
<h2 id="Gradle">Gradle</h2><p> <a href="http://stormzhang.com/devtools/2014/12/18/android-studio-tutorial4/" target="_blank" rel="external">Gradle基础</a><br> <a href="http://blog.saymagic.cn/2015/02/16/release-library-to-jcenter.html" target="_blank" rel="external">Android发布项目到JCenter</a></p>
<h2 id="插件">插件</h2><blockquote>
<p><a href="http://www.zhihu.com/question/28026027" target="_blank" rel="external">Android Studio插件汇总</a></p>
</blockquote>
<ul>
<li><p><a href="http://qushouxichuan.com/blog/article/70" target="_blank" rel="external">GsonFormat</a><br>根据gson生成对应的javabean<br><img src="https://camo.githubusercontent.com/fbf4b89e2ec64e80d351f725d11762ebd2b7a515/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f3136363836362d303766333038346262363735386566612e676966" alt=""></p>
<h2 id="打包">打包</h2><p><a href="http://blog.csdn.net/ljchlx/article/details/43059467" target="_blank" rel="external">多渠道打包</a></p>
<h2 id="Git和GitHub">Git和GitHub</h2><ol>
<li><a href="http://blog.csdn.net/github_25928675/article/details/47834533#t2" target="_blank" rel="external">Android studio上使用github</a></li>
<li>将项目添加git管理<br>项目通过git命令clone或者其他工具clone下来<br>菜单里点击cvs<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/camera/AndroidStudio/androidstudio_cvs.png"><br>然后选中Enable Vesion……..<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/camera/AndroidStudio/androidstudio_cvs(1).png"><br>紧接着选中那种版本控制就可以了<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/camera/AndroidStudio/androidstudio_cvs(2).png"></li>
</ol>
<h2 id="异常解决">异常解决</h2><ul>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46483731" target="_blank" rel="external">Android Studio Failed to complete Gradle execution</a></li>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46564727" target="_blank" rel="external">Android studio报AAPT err(854725124):</a></li>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46482475" target="_blank" rel="external"> AndroidStudio_local path doesn’t exist解决办法</a></li>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46481849" target="_blank" rel="external"> Could not download artifact ‘ecj.jar (org.eclipse.jdt.core.compiler:ecj:4.4.2)</a></li>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46695217" target="_blank" rel="external"> Android Studio 错误: 非法字符: ‘\ufeff’ 解决方案|错误: 需要class, interface或enum</a></li>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46482475" target="_blank" rel="external">AndroidStudio_local path doesn’t exist解决办法</a></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>推荐链接<br>   <a href="http://www.android-studio.org/" target="_blank" rel="external">Android studio中文社区</a><br>   <a href="htt]]>
    </summary>
    
      <category term="Android Studio" scheme="http://waylenw.github.io/tags/Android-Studio/"/>
    
      <category term="博客精华" scheme="http://waylenw.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%B2%BE%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac使用操作大全]]></title>
    <link href="http://waylenw.github.io/Mac/mac-control-all/"/>
    <id>http://waylenw.github.io/Mac/mac-control-all/</id>
    <published>2015-12-26T06:16:20.000Z</published>
    <updated>2015-12-26T06:16:20.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>本博主要是mac使用操作教程汇总。不定时的更新。</p>
</blockquote>
<p> 推荐：<br> <a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/SystemPreferences/index.html" target="_blank" rel="external">Mac开发配置配置手册</a></p>
<h1 id="系统基本介绍">系统基本介绍</h1><p> <a href="http://blog.csdn.net/smstong/article/details/15499661" target="_blank" rel="external">系统目录结构介绍</a><br></p>
<h1 id="快捷键">快捷键</h1><p><strong>快捷键的符号所对应的按键</strong></p>
<p>⌥—&gt; option|alt</p>
<p>⇧—&gt;shift</p>
<p>⌃—&gt;control</p>
<p>⌘—&gt;command</p>
<p>⎋—&gt;esc</p>
<p><strong>快捷键一览</strong></p>
<p><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/Mac/keybroad.jpg" alt=""><br>以下为补充</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_ins">cmd</span>+方向键上  <span class="comment">#返回向一级文件夹</span></span><br><span class="line"><span class="built_ins">cmd</span>+方向键    <span class="comment">#进入下一级文件夹       </span></span><br><span class="line"><span class="built_ins">cmd</span>+alt+v    <span class="comment">#将文件复制并移动</span></span><br></pre></td></tr></table></figure>
<h1 id="基本操作">基本操作</h1><blockquote>
<p><a href="http://sspai.com/28012/" target="_blank" rel="external">Mac卸载软件的四种方法</a><br>  <a href="http://jingyan.baidu.com/article/8cdccae965875c315413cdfe.html" target="_blank" rel="external">Mac修改hosts文件</a></p>
</blockquote>
<p> <strong>如何使用右键</strong></p>
<blockquote>
<p>1.两指点击触摸板<br>  2.⌃+单击触摸板</p>
</blockquote>
<p> <strong>手势操作</strong></p>
<blockquote>
<p>系统偏好设置＝》触摸板＝》里面可以查看所有相关的手势操作，有图演示非常易懂<br> <a href="http://www.ifunmac.com/2012/11/mac-gesture/" target="_blank" rel="external">20个Mac用户必须掌握的触摸手势</a></p>
</blockquote>
<h1 id="软件">软件</h1><p><a href="http://blog.csdn.net/github_25928675/article/details/49179247" target="_blank" rel="external">OS x yosemite jdk安装路径和环境变量配置</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>本博主要是mac使用操作教程汇总。不定时的更新。</p>
</blockquote>
<p> 推荐：<br> <a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/SystemPr]]>
    </summary>
    
      <category term="Mac" scheme="http://waylenw.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android SurfaceView的基本介绍(一)]]></title>
    <link href="http://waylenw.github.io/Android/android-surfaceview-one/"/>
    <id>http://waylenw.github.io/Android/android-surfaceview-one/</id>
    <published>2015-12-25T16:00:00.000Z</published>
    <updated>2015-12-26T06:47:05.000Z</updated>
    <content type="html"><![CDATA[<h1 id="概述">概述</h1><ul>
<li><strong>官方APi的描述</strong><br>SurfaceView是视图(View)的继承类，这个视图里内嵌了一个专门用于绘制的Surface。你可以控制这个Surface的格式和尺寸。Surfaceview控制这个Surface的绘制位置。surface是纵深排序(Z-ordered)的，这表明它总在自己所在窗口的后面。surfaceview提供了一个可见区域，只有在这个可见区域内 的surface部分内容才可见，可见区域外的部分不可见。surface的排版显示受到视图层级关系的影响，它的兄弟视图结点会在顶端显示。这意味者 surface的内容会被它的兄弟视图遮挡，这一特性可以用来放置遮盖物(overlays)(例如，文本和按钮等控件)。注意，如果surface上面 有透明控件，那么它的每次变化都会引起框架重新计算它和顶层控件的透明效果，这会影响性能。</li>
<li><strong>定义</strong><br>SurfaceView是View类的子类，可以直接从内存或者DMA等硬件接口取得图像数据，是个非常重要的绘图视图。它的特性是：可以在主线程之外的线程中向屏幕绘图上。这样可以避免画图任务繁重的时候造成主线程阻塞，从而提高了程序的反应速度。在游戏开发中多用到SurfaceView，游戏中的背景、人物、动画等等尽量在画布canvas中画出。</li>
<li><p><strong>绘制机制</strong><br>更详细的讲解:<a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2012/1201/656.html" target="_blank" rel="external">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2012/1201/656.html</a></p>
<h1 id="实现">实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> SurfaceView surfaceView</span><br><span class="line"></span><br><span class="line">　　　 <span class="annotation">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        surfaceView=<span class="keyword">new</span> SurfaceView(<span class="keyword">this</span>);</span><br><span class="line">        setContentView(surfaceView);</span><br><span class="line">        surfaceView.getHolder().addCallback(callback);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">   <span class="comment">/**</span><br><span class="line">    * surface的回调</span><br><span class="line">    */</span></span><br><span class="line">   <span class="keyword">private</span> SurfaceHolder.Callback callback = <span class="keyword">new</span> SurfaceHolder.Callback() &#123;</span><br><span class="line">       <span class="annotation">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">surfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//在surface销毁的时候调用</span></span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="annotation">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">surfaceCreated</span><span class="params">(SurfaceHolder holder)</span> </span>&#123;</span><br><span class="line">           <span class="comment">//在创建时激发，一般在这里调用画图的线程。</span></span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="annotation">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">surfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="keyword">int</span> format,</span><br><span class="line">                                  <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//销毁时激发，一般在这里将画图的线程停止、释放。</span></span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;　　</span><br><span class="line">   &#125;      　　</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="概述">概述</h1><ul>
<li><strong>官方APi的描述</strong><br>SurfaceView是视图(View)的继承类，这个视图里内嵌了一个专门用于绘制的Surface。你可以控制这个Surface的格式和尺寸。Surfaceview控]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio Mac快捷键]]></title>
    <link href="http://waylenw.github.io/AndroidStudio/androdi-studio-mac-keymap/"/>
    <id>http://waylenw.github.io/AndroidStudio/androdi-studio-mac-keymap/</id>
    <published>2015-12-22T03:46:47.000Z</published>
    <updated>2015-12-22T03:46:47.000Z</updated>
    <content type="html"><![CDATA[<h1 id="设置Keymap">设置Keymap</h1><p>setting=&gt;左侧输入框输入keymap。如图<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/Mac/mac_keymap.png" alt=""></p>
<h1 id="[Eclipse_Mac_osx]版常用快捷键">[Eclipse Mac osx]版常用快捷键</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmd+[               	<span class="comment">//返回到上一个查看代码的位置(蓝色按钮Back)	</span></span><br><span class="line">cmd+]					<span class="comment">//返回到下一个之前查看代码的位置(蓝色按钮Forword)</span></span><br><span class="line">cmd+<span class="keyword">d</span> 					<span class="comment">//删除一行</span></span><br><span class="line">cmd+o					<span class="comment">//查看当前类所有方法</span></span><br><span class="line">cmd+alt+下方向键      	 <span class="comment">//复制一行代码</span></span><br><span class="line">ctrl+鼠标左键         	<span class="comment">//跳如该方法或者该文件内</span></span><br><span class="line">cmd+enter				<span class="comment">//快速修复</span></span><br><span class="line">cmd+shift+f				<span class="comment">//格式化代码	</span></span><br><span class="line">cmd+shirt+r				<span class="comment">//全局文件快速查找</span></span><br><span class="line">ctrl+<span class="keyword">h</span> 					<span class="comment">//全局查找</span></span><br></pre></td></tr></table></figure>
<p><strong>异常问题修复</strong><br>切换到eclipse_mac_osx的keymap的发现搜索关键词的快捷键无效</p>
<ol>
<li>先在keymap栏的右侧输入find关键词，你会发现find功能没有指定快捷键<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/Mac/mackeymap1.png" alt=""></li>
<li>接下来你需要双击该列，就会弹出一个菜单. </li>
<li>点击菜单后选择Add keybord shortcut。<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/Mac/mackeymap2.png" alt=""></li>
<li>然后给他设置一个快捷键就可以了<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/Mac/mackeymap3.png" alt=""><br>我这里设置的cmd+f。可以根据自己需要去设置。    </li>
</ol>
<h1 id="[Mac_osx]版常用快捷键">[Mac osx]版常用快捷键</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmd+[               	<span class="comment">//返回到上一个查看代码的位置(蓝色按钮Back)	</span></span><br><span class="line">cmd+]					<span class="comment">//返回到下一个之前查看代码的位置(蓝色按钮Forword)</span></span><br><span class="line">cmd+<span class="keyword">d</span> 					<span class="comment">//复制上一行</span></span><br><span class="line">cmd+o					<span class="comment">//查看当前类所有方法</span></span><br><span class="line">cmd+alt+下方向键      	 <span class="comment">//复制一行代码</span></span><br><span class="line">cmd+鼠标左键         	<span class="comment">//跳如该方法或者该文件内</span></span><br><span class="line">alt+enter				<span class="comment">//快速修复</span></span><br><span class="line">cmd+shift+<span class="keyword">l</span>				<span class="comment">//格式化代码	</span></span><br><span class="line">cmd+shirt+r				<span class="comment">//全局文件快速查找</span></span><br><span class="line">Shift+F6				<span class="comment">//重命名</span></span><br></pre></td></tr></table></figure>
<p>Search<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmd</span>+R         	//<span class="built_in">Replace</span></span><br><span class="line"><span class="built_in">Cmd</span>+F			//<span class="built_in">find</span></span><br></pre></td></tr></table></figure></p>
<h1 id="自定义快捷键">自定义快捷键</h1><p>如以上的快捷键都不满意,可以自行修改快捷键。详细流程可以参考上面的异常问题修复<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">关键字              	 功能</span><br><span class="line"><span class="keyword">back</span>				回退到上一个文件查看的位置</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="设置Keymap">设置Keymap</h1><p>setting=&gt;左侧输入框输入keymap。如图<br><img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/Mac/m]]>
    </summary>
    
      <category term="Android Studio" scheme="http://waylenw.github.io/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio logcat高亮]]></title>
    <link href="http://waylenw.github.io/AndroidStudio/android-studio-logcat-highlight/"/>
    <id>http://waylenw.github.io/AndroidStudio/android-studio-logcat-highlight/</id>
    <published>2015-12-18T06:31:15.000Z</published>
    <updated>2015-10-17T01:31:45.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>使用过Android studio开发知道，android studio默认的日志打印都是白色。<br>  这对我们开发查找log信息无疑十分印象效率。这时我们就需要对log进行高亮。<br>  其实配置log级别对应的颜色相对简单，但是很多开发者并不知道由此功能。</p>
</blockquote>
<h1 id="效果图">效果图</h1><p>  <img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/androidstudio/logcat1.png" alt=""></p>
<h1 id="如何配置logcat高亮">如何配置logcat高亮</h1><p>  在工具栏中找到setting=&gt;android logcat.即可对android logcat日志各种打印级别设置颜色。<br>   在选择时 要将红色的框内的钩取消才可编辑。<br>    <img src="https://raw.githubusercontent.com/Waylenw/GithubImg/master/androidstudio/logcat.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>使用过Android studio开发知道，android studio默认的日志打印都是白色。<br>  这对我们开发查找log信息无疑十分印象效率。这时我们就需要对log进行高亮。<br>  其实配置log级别对应的颜色相对简单，但是很多开发者]]>
    </summary>
    
      <category term="Android Studio" scheme="http://waylenw.github.io/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[日常优秀工具秘籍]]></title>
    <link href="http://waylenw.github.io/recomd-dev-utils/"/>
    <id>http://waylenw.github.io/recomd-dev-utils/</id>
    <published>2015-12-06T05:48:24.000Z</published>
    <updated>2015-12-06T05:48:24.000Z</updated>
    <content type="html"><![CDATA[<p><strong>不定时更新</strong></p>
<h1 id="Markdown编写">Markdown编写</h1><ol>
<li><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">Cmd Markdown</a><br>支持三大平台，对代码有高亮效果。支持云同步</li>
<li><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a><br>Mac下比较优秀的Markdown编写工具。(貌似1.0开始就要付费了)</li>
</ol>
<h1 id="Android开发">Android开发</h1><ol>
<li><a href="http://tc.sigma-rt.com.cn/" target="_blank" rel="external">Toal Control</a><br>电脑控制手机。支持安卓多个版本。目前好像只有win版本</li>
<li><a href="http://www.cockos.com/licecap/" target="_blank" rel="external">licecap</a><br>轻量级的录屏软件。有windows和osx的版本 </li>
</ol>
<h1 id="Mac">Mac</h1><ol>
<li><a href="https://itunes.apple.com/cn/app/go2shell/id445770608?mt=12" target="_blank" rel="external">Go2Shell</a><br>在Finder中进入到终端的神器</li>
<li><a href="http://www.openoffice.org/download/index.html" target="_blank" rel="external">oppenoffice</a><br>Apache下免费的office软件。支持跨平台</li>
<li><a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a><br>Alfred是Mac下的搜索神器</li>
<li><a href="http://freemacsoft.net/appcleaner/" target="_blank" rel="external">appcleaner</a><br>mac下卸载App。并支持搜索该软件创建的文件。</li>
</ol>
<h1 id="chorme插件">chorme插件</h1><blockquote>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5NDAxNTY4MA==&amp;mid=400675430&amp;idx=1&amp;sn=1f5f4f2aef4bb6935129bbac17b59a3c&amp;scene=0#wechat_redirect" target="_blank" rel="external">chrome你不得不知的实用技巧</a></p>
</blockquote>
<ol>
<li><p><a href="https://chrome.google.com/webstore/search/Vysor?hl=zh-CN" target="_blank" rel="external">Vyor</a><br>电脑操作手机，只支持安卓。目前只是beta</p>
</li>
<li><p><a href="http://www.xmarks.com/" target="_blank" rel="external">xmarks</a><br>书签工具。国内使用chrome的同步书签不错的选择，轻巧实用。 </p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>不定时更新</strong></p>
<h1 id="Markdown编写">Markdown编写</h1><ol>
<li><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="extern]]>
    </summary>
    
      <category term="博客精华" scheme="http://waylenw.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%B2%BE%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[移动开发博客汇总]]></title>
    <link href="http://waylenw.github.io/mobole-all-blog/"/>
    <id>http://waylenw.github.io/mobole-all-blog/</id>
    <published>2015-11-28T09:25:00.000Z</published>
    <updated>2015-11-28T09:25:00.000Z</updated>
    <content type="html"><![CDATA[<p><strong>不定时更新</strong></p>
<blockquote>
<p>本文主要是收集移动开发的大神系列的博客(目前主要是Android方向),以及一些高质量的文章的网站。<br>推荐链接</p>
</blockquote>
<p><a href="https://github.com/yeungeek/android-dev-cn" target="_blank" rel="external">android-dev-cn(Android开发大神博客汇总)</a></p>
<h1 id="组织">组织</h1><ul>
<li><p><a href="https://github.com/square" target="_blank" rel="external">Square</a><br>美国一家支付公司。<br>开源项目有:</p>
<ul>
<li><a href="https://github.com/square/okhttp" target="_blank" rel="external">okhttp</a><br>Android网络请求框架。支持HTTP2.0。有对推送等一些功能的封装。</li>
</ul>
</li>
<li><p><a href="https://github.com/facebook" target="_blank" rel="external">facebook</a><br> 脸书，全球最火的社交软件。<br> 开源项目有:</p>
<ul>
<li><a href="https://github.com/facebook/react-native" target="_blank" rel="external">react-native</a></li>
</ul>
</li>
<li><a href="https://github.com/taobao" target="_blank" rel="external">淘宝</a><br> 这个就不介绍了<br> 开源项目:</li>
</ul>
<h1 id="Android">Android</h1><h2 id="国外">国外</h2><ol>
<li>hannesdorfmann<br>blog:<a href="http://hannesdorfmann.com" target="_blank" rel="external">http://hannesdorfmann.com</a><br>github:<a href="https://github.com/sockeqwe?tab=repositories" target="_blank" rel="external">https://github.com/sockeqwe?tab=repositories</a></li>
</ol>
<h2 id="国内">国内</h2><ol>
<li><p><strong>胡凯</strong><br>Android training的中文发起者。性能优化典范中文译文。目就职于腾讯<br>CSDN_blog:<a href="http://blog.csdn.net/kesenhoo/article/details/7362512" target="_blank" rel="external">http://blog.csdn.net/kesenhoo/article/details/7362512</a><br>个人网站:<a href="http://hukai.me/" target="_blank" rel="external">http://hukai.me/</a></p>
</li>
<li><p><strong>鸿洋</strong><br>很多自定义View的教程，博客通俗易懂<br>blog:<a href="http://blog.csdn.net/lmj623565791?viewmode=contents" target="_blank" rel="external">http://blog.csdn.net/lmj623565791?viewmode=contents</a><br>github:<a href="https://github.com/sockeqwe?tab=repositories/" target="_blank" rel="external">https://github.com/sockeqwe?tab=repositories/</a>“</p>
</li>
<li><p><strong>trinea</strong><br>性能优化，Android开源项目汇总<br>blog:<a href="http://www.trinea.cn/category/android" target="_blank" rel="external">http://www.trinea.cn/category/android</a><br>Iteye的blog:<a href="http://trinea.iteye.com/" target="_blank" rel="external">http://trinea.iteye.com/</a><br>github:<a href="https://github.com/Trinea" target="_blank" rel="external">https://github.com/Trinea</a></p>
</li>
<li><p><strong>徐宜生</strong><br>《Android群英传》的作者。慕课网的讲师。较为突出对多图形图像。<br>blog:<a href="http://blog.csdn.net/eclipsexys?viewmode=contents" target="_blank" rel="external">http://blog.csdn.net/eclipsexys?viewmode=contents</a></p>
</li>
<li><p><strong>张明云</strong><br>知乎Android频道的热门回答常客。具有丰富Andorid开发经验.<br>blog:<a href="http://zmywly8866.github.io/" target="_blank" rel="external">http://zmywly8866.github.io/</a></p>
</li>
<li><p><strong>张兴业</strong><br>csdn博客专家。对ios和android都相关的博客专栏<br>blog:<a href="http://blog.csdn.net/xyz_lmn?viewmode=contents" target="_blank" rel="external">http://blog.csdn.net/xyz_lmn?viewmode=contents</a></p>
</li>
<li><p><strong>任玉刚</strong><br>csdn博客专家.《Android开发艺术探索的作者》.在百度安全卫士的团队<br>blog:<a href="http://blog.csdn.net/singwhatiwanna" target="_blank" rel="external">http://blog.csdn.net/singwhatiwanna</a></p>
</li>
<li><p><strong>农民伯伯</strong><br>Android中文Api的发起人。<br>blog:<a href="http://www.cnblogs.com/over140/" target="_blank" rel="external">http://www.cnblogs.com/over140/</a></p>
</li>
<li><p><strong>郭霖</strong><br>《Android第一行代码》的作者。有很多实战性博客。知识点很深入<br>blog:<a href="http://blog.csdn.net/guolin_blog" target="_blank" rel="external">http://blog.csdn.net/guolin_blog</a></p>
</li>
<li><p><strong>夏安明</strong><br>知识点比较深入，比较多的源码分析的讲解。涉及功能应用也比较多。<br>blog:<a href="http://blog.csdn.net/xiaanming?viewmode=contents" target="_blank" rel="external">http://blog.csdn.net/xiaanming?viewmode=contents</a></p>
</li>
<li><p><strong>stormzhang</strong><br>9GAG、CustomLoading等的开源项目的作者。薄荷科技的项目主管。<br>blog:<a href="http://stormzhang.com/" target="_blank" rel="external">http://stormzhang.com/</a></p>
</li>
<li><p><strong>巫_1曲待续</strong><br>很多基础性性文章，而且比较全面。推荐新手收藏的。<br>blog:<a href="http://blog.csdn.net/wwj_748?viewmode=contents" target="_blank" rel="external">http://blog.csdn.net/wwj_748?viewmode=contents</a></p>
</li>
<li><p><strong>阳春面</strong><br>寻找的干货收集好地方，官方教程的中文版的收集<br>blog:<a href="http://www.aswifter.com" target="_blank" rel="external">http://www.aswifter.com</a></p>
</li>
<li><p><strong>xiaochao1234</strong><br>很多基础的文章，包含一些开发初学者的建议<br>blog:<a href="http://www.cnblogs.com/xiaochao1234/archive/2015/06.html" target="_blank" rel="external">http://www.cnblogs.com/xiaochao1234/archive/2015/06.html</a></p>
</li>
<li><p><strong>lightSky</strong><br>blog:<a href="https://github.com/lightSky" target="_blank" rel="external">https://github.com/lightSky</a></p>
</li>
</ol>
<h2 id="优秀博文网站">优秀博文网站</h2><ol>
<li><p>泡在网上的日子<br>新技术看这里基本ok，转载博客的质量很高<br>网址链接：<a href="http://www.jcodecraeer.com/plus/list.php?tid=18" target="_blank" rel="external">http://www.jcodecraeer.com/plus/list.php?tid=18</a></p>
</li>
<li><p>Android 开发周报<br>收集Android开发最新的一些文章和开源项目<br>网址链接：<a href="http://www.race604.com/tag/Android-Weekly/" target="_blank" rel="external">http://www.race604.com/tag/Android-Weekly/</a></p>
</li>
<li><p>开发技术前线<br>高质量文章转载<br>网址链接：<a href="http://www.devtf.cn/" target="_blank" rel="external">http://www.devtf.cn/</a></p>
</li>
<li><p>技术小黑屋<br>技术分享(书籍和文章不等主要的方向是java和andrid)<br>网址链接：<a href="http://droidyue.com/" target="_blank" rel="external">http://droidyue.com/</a></p>
</li>
<li><p>程序员头条<br>为程序员提供iOS、C++、Java、Android、Web、C、.net在线学习平台<br>网址链接：<a href="http://www.90159.com/" target="_blank" rel="external">http://www.90159.com/</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>不定时更新</strong></p>
<blockquote>
<p>本文主要是收集移动开发的大神系列的博客(目前主要是Android方向),以及一些高质量的文章的网站。<br>推荐链接</p>
</blockquote>
<p><a href="https]]>
    </summary>
    
      <category term="博客精华" scheme="http://waylenw.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%B2%BE%E5%8D%8E/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo搭建博客之更换主题以及博客基本配置(二)]]></title>
    <link href="http://waylenw.github.io/hexo/hexo-two/"/>
    <id>http://waylenw.github.io/hexo/hexo-two/</id>
    <published>2015-10-30T14:53:25.000Z</published>
    <updated>2015-10-30T14:53:25.000Z</updated>
    <content type="html"><![CDATA[<h1 id="更换主题">更换主题</h1><blockquote>
<p>在经过上一篇的博客搭建后，很多是否对默认的主题并不是很满意，是否希望可以打造一款属于自己风格的博客主题呢？</p>
</blockquote>
<p> <strong>有哪些主题可以更换</strong><br> <a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">github上的hexo的主题大全</a><br> <a href="http://www.zhihu.com/question/24422335/answer/46357100" target="_blank" rel="external">知乎上的hexo的主题排行版</a><br> <a href="https://hexo.io/themes/" target="_blank" rel="external">hexo官方主题</a></p>
<p>  <strong>如何进行更换主题</strong><br>  <a href="http://wuchong.me/jacman/2014/11/20/how-to-use-jacman/#more" target="_blank" rel="external">如何使用 Jacman 主题</a></p>
<h1 id="主题和博客的相关配置">主题和博客的相关配置</h1><p> <strong>添加导航项目</strong></p>
<p>以我的路径为例:<code>G:\Hexo\themes\jacman\_config.xml</code>主题默认的两个导航是主页和<code>归档: /archives</code>后是导航的访问路径。前面是导航的名称    根据这个规律自行添加导航和访问路径即可</p>
 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">##### Menu  导航项</span></span><br><span class="line"><span class="label">menu:</span></span><br><span class="line"> 主页: /      </span><br><span class="line"> 归档: /archives</span><br><span class="line"> 摄影: /cameras</span><br><span class="line"> About: /abouts</span><br></pre></td></tr></table></figure>
<p> <strong>为导航项设置加载页面</strong></p>
<p> archives导航是默认开启的，archives导航下的文章默认的目录是<code>source\_posts\</code>在此文件夹下新建xx.md文件。归档下就会显示相应的文章item<br> cameras和abouts导航对应的文件夹是<code>sourc/cameras和source/abouts</code>。并在此目录下新建index.md.之后点击对应的menus时就默认加载目录下index.md文件</p>
<h1 id="生成rss">生成rss</h1><p> 生成插件</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<p> 配置<code>hexo/_config.xml</code>(详情可以查看第一篇时提供的_config.xml)</p>
 <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins: #插件，例如生成 RSS 和站点地图的<span class="bullet">- </span>hero-generator-feed<span class="bullet">- </span>hexo-generator-sitemap</span><br></pre></td></tr></table></figure>
<p> 这里要注意的是该配置必须在themes设置的前面配置,否则不起作用。配置完后clean一下重新生成一下就好。<br> 最后需要在导航上添加你的RSS链接。具体查看相关的主题配置。</p>
<p> 以下是RSS的链接(比如我的),部署到服务器,输入此链接看是否生效<br> <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">waylenw<span class="class">.github</span><span class="class">.io</span>/atom.xml</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="更换主题">更换主题</h1><blockquote>
<p>在经过上一篇的博客搭建后，很多是否对默认的主题并不是很满意，是否希望可以打造一款属于自己风格的博客主题呢？</p>
</blockquote>
<p> <strong>有哪些主题可以更换</strong]]>
    </summary>
    
      <category term="hexo" scheme="http://waylenw.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 6.0的改变]]></title>
    <link href="http://waylenw.github.io/Android/Android-sdk-6-change/"/>
    <id>http://waylenw.github.io/Android/Android-sdk-6-change/</id>
    <published>2015-10-17T01:32:48.000Z</published>
    <updated>2015-10-17T01:31:45.000Z</updated>
    <content type="html"><![CDATA[<p> <strong>更新ing</strong></p>
<blockquote>
<p>原文链接:<a href="http://developer.android.com/intl/zh-cn/about/versions/marshmallow/android-6.0-changes.html" target="_blank" rel="external">http://developer.android.com/intl/zh-cn/about/versions/marshmallow/android-6.0-changes.html</a></p>
</blockquote>
<h1 id="运行时权限">运行时权限</h1><p> 这次的版本引入一个新的权限模型,用户可以在App运行的时候直接管理App的权限。这个模型给了用户改进可见性和控制权限。同时简化了App开发者安装和自动升级的流程。用户可以在已经安装的App进行单独授权或者  撤销权限。</p>
<p> 在你的App设置target6.0(Api 等级23)或者更高。确保在运行时检查和请求权限。调用新的方法<a href="http://developer.android.com/reference/android/content/Context.html#checkSelfPermission(java.lang.String)" target="_blank" rel="external">checkSelfPermission()</a>，为已确保你的App已经授予权限。调用<a href="http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[],int)" target="_blank" rel="external">requestPermissions()</a>去请求一个权限。如果你的APP不是target不是Android6.0(Api等级23)。你应该测试你的app在新的权限模型上。更多新的新的权限管理模型的细节在你的应用程序上，<a href="http://developer.android.com/training/permissions/index.html" target="_blank" rel="external">see Working with System Permissionss</a>。如何评估这个提示对你的App的影响，请看<a href="http://developer.android.com/training/permissions/best-practices.html#testing" target="_blank" rel="external">Permissions Best Practices</a>。</p>
<h1 id="通知">通知</h1><p> 这次版本移除了 Notification.setLatestEventInfo()方法。使用 <a href="http://developer.android.com/reference/android/app/Notification.Builder.html" target="_blank" rel="external">Notification.Builder</a> 类而不是用构造参数创建通知。在更新通知的时候重用<a href="http://developer.android.com/reference/android/app/Notification.Builder.html" target="_blank" rel="external">Notification.Builder</a> 实例。</p>
<p> 调用<a href="http://developer.android.com/reference/android/app/Notification.Builder.html#build%28%29" target="_blank" rel="external">build()</a>方法来获得更新 Notification 实例。 adb shell dumpsys notification 该命令不再打印通知的文本。<br> 使用 adb shell dumpsys notification –noredact命令而不是打印文本通知对象。</p>
<h1 id="移除了Apache_HTTP_Client">移除了Apache HTTP Client</h1><p>  Android6.0移除了Apache HTTP Client的支持。如果你的App客户端搭载2.3或者更高的版本。<br>  你应该使用 HttpURLConnection.这个Api有很多的改变因为它是使用透明压缩和响应缓存。<br>  并且最大限度的减少你的电力消耗。如果你继续执迷不悟的使用Apache HTTP APIs,你应该在第一时间在编译时依赖的budid.gradle文件中国声明<br>  <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">android</span> &#123;</span><br><span class="line">  <span class="title">useLibrary</span> <span class="string">'org.apache.http.legacy'</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Runtime运行时(反射有关)">Runtime运行时(反射有关)</h1><p>  ART运行时现在正确的实现访问<a href="http://developer.android.com/intl/zh-cn/reference/java/lang/reflect/Constructor.html#newInstance(java.lang.Object)" target="_blank" rel="external">NewInstance</a>方法访问检查的规则。<br>  这个问题修复了在Dalvik虚拟机在检查访问一些以前不正确的版本的问题。如果你的App在使用 newIntance() 方法以及你想重写访问检查。<br>  调用 setAccessible() 方法并将传递参数设置为true.如果你的APP使用的v7 appcompat library 或者是 v7 recyclerview library,你必须更新至这些库的最后一个版本。    </p>
]]></content>
    <summary type="html">
    <![CDATA[<p> <strong>更新ing</strong></p>
<blockquote>
<p>原文链接:<a href="http://developer.android.com/intl/zh-cn/about/versions/marshmallow/android-6.0-]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android bitmap优化]]></title>
    <link href="http://waylenw.github.io/Android/android-bitmap-memory-yh/"/>
    <id>http://waylenw.github.io/Android/android-bitmap-memory-yh/</id>
    <published>2015-10-17T01:32:48.000Z</published>
    <updated>2015-10-17T01:31:45.000Z</updated>
    <content type="html"><![CDATA[<h1 id="内存溢出的原由">内存溢出的原由</h1><blockquote>
<p>内存溢出：就是分配的内存不足以放下数据项序列。如在一个域中输入的数据超过了它的要求<br>就会系统能给你的，系统不能满足需求，于是产生溢出。或者可以这样理解堆上分配的内存没<br>有被释放，从而失去对其控制。这样会造成程序能使用的内存越来越少，导致系统运行速度减<br>慢，严重情况会使程序宕掉。</p>
</blockquote>
<h2 id="了解BitMap和内存的关系">了解BitMap和内存的关系</h2><h3 id="位图和矢量图的区别">位图和矢量图的区别</h3><ul>
<li>位图<br>位图使用我们称为像素的一格一格的小点来描述图像.您的计算机屏幕其实就是一张包含大量像素点的网格.在位图中,上面我们看到的树叶图像将会由每一个网格中的像素点的位置和色彩值来决定.每一点的色彩是固定的,当我们在更高分辨率下观看图像时,每一个小点看上去就像是一个个马赛克色块,如下面例子中的右图.<br>当您在进行位图编辑时,其实您是在一点一点的定义图像中的所有像素点的信息,而不是类似矢量图只需要定义图形的轮廓线段和曲线.因为一定尺寸的位图图像是在一定分辨率下被一点一点记录下来,所以这些位图图像的品质是和图像生成时采用的分辨率相关的.当图像放大后,会在图像边缘出</li>
<li><p>矢量图<br>矢量图使用线段和曲线描述图像,所以称为矢量,同时图形也包含了色彩和位置信息.下面例子中的树叶,就是利用大量的点连接成曲线来描述树叶的轮廓线.然后根据轮廓线,在图像内部填充一定的色彩.<br>当您进行矢量图形的编辑时,您定义的是描述图形形状的线和曲线的属性,这些属性将被记录下来.对矢量图形的操作,例如移动,重新定义尺寸,重新定义形状,或者改变矢量图形的色彩,都不会改变矢量图形的显示品质.您也可以通过矢量对象的交叠,使得图形的某一部分被隐藏,或者改变对象的透明度.矢量图形是”分辨率独立”的,这就是说,当您显示或输出图像时,图像的品质不受设备的分辨率的影响.在例子中,右图是放大后的矢量图形,我们看见图像的品质没有受到影响.</p>
</li>
<li><p>总结<br>他们最简单的区别就是:<br>失量图可以无限放大.而且不会失真.</p>
<h3 id="Bitmap占用大小和内存的关系">Bitmap占用大小和内存的关系</h3><p>由上描素可知。Bitmap的是属于位图，而影响位图的占用大小的几个关键点：</p>
</li>
<li><p>图片长度</p>
</li>
<li>图片宽度</li>
<li>每个像素所占的字节(Bitmap的RGB值) </li>
</ul>
<p>所以BitMap的的计算公式为:<br>一张图片（BitMap）占用的内存=图片长度<em>图片宽度</em>单位像素占用的字节数<br><a href="http://blog.csdn.net/hudashi/article/details/7856519" target="_blank" rel="external">详解介绍如何计算Bitmap内存占用</a></p>
<p> <strong>注意：</strong><br>        Bitmap的占用空间大小和目标文件的大小无关，主要是图片的长和宽。</p>
<h1 id="Bitmap的优化">Bitmap的优化</h1><blockquote>
<p>引用块内容注意 ：在Android应用里，最耗费内存的就是图片资源。而且在Android系统中，读取位图Bitmap时，分给虚拟机中的图片的堆栈大只有8M，如果超出了，就会出现OutOfMemory异常。</p>
</blockquote>
<h2 id="1-及时释放内存">1.及时释放内存</h2><h3 id="1-1为什么要及时回收Bitmap的内存">1.1为什么要及时回收Bitmap的内存</h3><p>   Bitmap类有一个方法recycle()，从方法名可以看出意思是回收。这里就有疑问了，Android系统有自己的垃圾回收机制，可以不定期的回收掉不使用的内存空间，当然也包括Bitmap的空间。那为什么还需要这个方法呢？<br> Bitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。仔细查看BitmapFactory    的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。所以，加载Bitmap到内存里以后，是包含两部分内存区域    的。简单的说，一部分是Java部分的，一部分是C部分的。这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。所以需要调用recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了。<br>  那如果不调用recycle()，是否就一定存在内存泄露呢？也不是的。Android的每个应用都运行在独立的进程里，有着独立的内存，如  果整个进程被应用本身或者系统杀死了，内存也就都被释放掉了，当然也包括C部分的内存。<br>  Android对于进程的管理是非常复杂的。简单的说，Android系统的进程分为几个级别，系统会在内存不足的情况下杀死一些低优先  级的进程，以提供给其它进程充足的内存空间。在实际项目开发过程中，有的开发者会在退出程序的时候使用  Process.killProcess(Process.myPid())的方式将自己的进程杀死，但是有的应用仅仅会使用调用Activity.finish()方法的方式关闭掉所有的Activity。</p>
<h3 id="1-2手动释放内存">1.2手动释放内存</h3><p>Android手机的用户，根据习惯不同，可能会有两种方式退出整个应用程序：一种是按Home键直接退到桌面；另一种是从应用程序的退出按钮或者按Back键退出程序。那么从系统的角度来说，这两种方式有什么区别呢？按Home键，应用程序并没有被关闭，而是成为了后台应用程序。按Back键，一般来说，应用程序关闭了，但是进程并没有被杀死，而是成为了空进程（程序本身对退出做了特殊处理的不考虑在内）。<br>Android系统已经做了大量进程管理的工作，这些已经可以满足用户的需求。个人建议，应用程序在退出应用的时候不需要手动杀死自己所在的进程。对于应用程序本身的进程管理，交给Android系统来处理就可以了。应用程序需要做的，是尽量做好程序本身的内存管理工作。</p>
<p>一般来说，如果能够获得Bitmap对象的引用，就需要及时的调用Bitmap的recycle()方法来释放Bitmap占用的内存空间，而不要等Android系统来进行释放。<br>下面是释放Bitmap的示例代码片段。<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在Activity或Fragment的onDestory方法中进行回收(必须确保bitmap不在使用)</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestory</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="comment">// 先判断是否已经回收</span></span><br><span class="line">	<span class="keyword">if</span>(bitmap != <span class="keyword">null</span> &amp;&amp; !bitmap.isRecycled())&#123; </span><br><span class="line">        <span class="comment">// 回收并且置为null</span></span><br><span class="line">        bitmap.recycle(); </span><br><span class="line">        bitmap = <span class="keyword">null</span>; </span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>从上面的代码可以看到，bitmap.recycle()方法用于回收该Bitmap所占用的内存，接着将bitmap置空，最后使用System.gc()调用一下系统的垃圾回收器进行回收，可以通知垃圾回收器尽快进行回收。这里需要注意的是，调用System.gc()并不能保证立即开始进行回收过程，而只是为了加快回收的到来。</p>
<h2 id="2-进行图片压缩">2.进行图片压缩</h2><p>  在上诉几种方法做完之后，是否还有问题？如果我在开始的时候加载一张很大的图，直接超过了分配的内存大小，那也会引起内存溢出。这个时候我们就需要对加载的BitMap的大小进行控制，这个时候就需要用到图片压缩。</p>
<ul>
<li><p><a href="http://www.cnblogs.com/xiaochao1234/p/3880402.html" target="_blank" rel="external">图片压缩比较靠谱的几种办法</a></p>
<h2 id="3-捕获异常">3.捕获异常</h2><p>因为Bitmap是吃内存大户，为了避免应用在分配Bitmap内存的时候出现OutOfMemory异常以后Crash掉，需要特别注意实例化Bitmap部分的代码。通常，在实例化Bitmap的代码中，一定要对OutOfMemory异常进行捕获。</p>
</li>
</ul>
<p>以下是代码示例。</p>
 <figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Bitmap bitmap = <span class="literal">null</span>;  </span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">    <span class="comment">// 实例化Bitmap </span></span><br><span class="line">    bitmap = BitmapFactory.decodeFile(path); </span><br><span class="line">&#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123; </span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里对初始化Bitmap对象过程中可能发生的OutOfMemory异常进行了捕获。如果发生了OutOfMemory异常，应用不会崩溃，而是得到了一个默认的Bitmap图。</p>
<blockquote>
<p>经验分享：<br>很多开发者会习惯性的在代码中直接捕获Exception。但是对于OutOfMemoryError来说，这样做是捕获不到的。因为OutOfMemoryError是一种Error，而不是Exception。在此仅仅做一下提醒，避免写错代码而捕获不到OutOfMemoryError。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="内存溢出的原由">内存溢出的原由</h1><blockquote>
<p>内存溢出：就是分配的内存不足以放下数据项序列。如在一个域中输入的数据超过了它的要求<br>就会系统能给你的，系统不能满足需求，于是产生溢出。或者可以这样理解堆上分配的内存没<br>有被释放，]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Fragment切换解决方案之FragmentTransaction（一）]]></title>
    <link href="http://waylenw.github.io/Android/android-fragment-change-one/"/>
    <id>http://waylenw.github.io/Android/android-fragment-change-one/</id>
    <published>2015-10-08T16:00:00.000Z</published>
    <updated>2015-10-17T01:31:45.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>fragment切换？不就是Viewpager+fragment吗？是的这是很大多数App采用的切换的组合方式。但是Viewpager+fragment切换的的生命周期十分混乱，这就是会引发很多的坑！如果在一些不需要切换的动画的情况下，采用FragmentTransaction动态切换是一个不错的选择</p>
</blockquote>
<h1 id="拓展">拓展</h1><blockquote>
<p>先来看看有哪些切换的方案吧。又有哪些问题</p>
</blockquote>
<p><strong>（一）预先写在布局里面</strong><br>布局文件<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>  </span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span>  </span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span>  </span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span>  </span><br><span class="line">    android:background=<span class="string">"@drawable/activity_bg"</span>  </span><br><span class="line">    android:orientation=<span class="string">"vertical"</span> &gt;  </span><br><span class="line">  </span><br><span class="line">    &lt;fragment  </span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/fragement_main"</span>  </span><br><span class="line">        android:<span class="property">name</span>=<span class="string">"net.loonggg.fragment.FragmentMain"</span>  </span><br><span class="line">        android:layout_width=<span class="string">"fill_parent"</span>  </span><br><span class="line">        android:layout_height=<span class="string">"fill_parent"</span>  </span><br><span class="line">        android:layout_weight=<span class="string">"10"</span> /&gt;  </span><br><span class="line">  </span><br><span class="line">    &lt;fragment  </span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/fragement_search"</span>  </span><br><span class="line">        android:<span class="property">name</span>=<span class="string">"net.loonggg.fragment.FragmentSearch"</span>  </span><br><span class="line">        android:layout_width=<span class="string">"fill_parent"</span>  </span><br><span class="line">        android:layout_height=<span class="string">"fill_parent"</span>  </span><br><span class="line">        android:layout_weight=<span class="string">"10"</span> /&gt;  </span><br><span class="line">  </span><br><span class="line">    &lt;fragment  </span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/fragement_setting"</span>  </span><br><span class="line">        android:<span class="property">name</span>=<span class="string">"net.loonggg.fragment.FragmentSetting"</span>  </span><br><span class="line">        android:layout_width=<span class="string">"fill_parent"</span>  </span><br><span class="line">        android:layout_height=<span class="string">"fill_parent"</span>  </span><br><span class="line">        android:layout_weight=<span class="string">"10"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>java文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mFragments[<span class="number">0</span>] = fragmentManager.findFragmentById(R.id.fragement_main);  </span><br><span class="line">        mFragments[<span class="number">1</span>] = fragmentManager.findFragmentById(R.id.fragement_search);  </span><br><span class="line">        mFragments[<span class="number">2</span>] = fragmentManager  </span><br><span class="line">                .findFragmentById(R.id.fragement_setting);  </span><br><span class="line">        fragmentTransaction = fragmentManager.beginTransaction()  </span><br><span class="line">                .hide(mFragments[<span class="number">0</span>]).hide(mFragments[<span class="number">1</span>]).hide(mFragments[<span class="number">2</span>]);  </span><br><span class="line">        fragmentTransaction.show(mFragments[<span class="number">0</span>]).commit();</span><br></pre></td></tr></table></figure></p>
<p> 这种方案的问题就是在如果我的某个Fragment更换了,改动的涉及到两个文件，而且也不能进行动态加载，局限性比较大。<br> <strong>（二）Replace替换</strong><br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">replaceFragment</span><span class="params">(Fragment newFragment)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       FragmentTransaction trasection = getFragmentManager().beginTransaction();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//FragmentTransaction trasection =</span></span><br><span class="line">           getFragmentManager().beginTransaction();</span><br><span class="line">           trasection.replace(R.id.linearLayout2, newFragment);</span><br><span class="line">           trasection.addToBackStack(<span class="keyword">null</span>);</span><br><span class="line">           trasection.commit();</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p> 这样总没问题了吧？这种方案的问题在于每次调用replace方法时Fragment的生命周期会重走。这在现实开发中是不允许的。</p>
<h1 id="解决方案">解决方案</h1><p> <strong>build gradle</strong><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:support-v4:20.0.0'</span></span><br></pre></td></tr></table></figure></p>
<p>  <strong>布局文件</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/top"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"50dp"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tab1"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"@drawable/selector_tab"</span></span><br><span class="line">            <span class="attribute">android:gravity</span>=<span class="value">"center_horizontal|center_vertical"</span></span><br><span class="line">            <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:text</span>=<span class="value">"选项一"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tab2"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"@drawable/selector_tab"</span></span><br><span class="line">            <span class="attribute">android:gravity</span>=<span class="value">"center_horizontal|center_vertical"</span></span><br><span class="line">            <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_gravity</span>=<span class="value">"center_vertical|center_horizontal"</span></span><br><span class="line">                <span class="attribute">android:text</span>=<span class="value">"选项二"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tab3"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"@drawable/selector_tab"</span></span><br><span class="line">            <span class="attribute">android:gravity</span>=<span class="value">"center_horizontal|center_vertical"</span></span><br><span class="line">            <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_gravity</span>=<span class="value">"center_vertical|center_horizontal"</span></span><br><span class="line">                <span class="attribute">android:text</span>=<span class="value">"选项三"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/fragment"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_below</span>=<span class="value">"@+id/top"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><strong>Activity</strong><br> 以下采用的方式是预先将Fragment加入集合中，切换时从集合取出Fragment添加到FragmentTransaction事物中，每次加入的时候判断是否已经添加到FragmentTransaction中，存在则调用show，并将上一个fragment隐藏。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">FragmentActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> LinearLayout tab1, tab2, tab3;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Fragment&gt; fragmentArrayList;</span><br><span class="line">    <span class="keyword">private</span> Fragment mCurrentFrgment;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        initView();</span><br><span class="line">        initFragment();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tab1 = (LinearLayout) findViewById(R.id.tab1);</span><br><span class="line">        tab1.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        tab1.setTag(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        tab2 = (LinearLayout) findViewById(R.id.tab2);</span><br><span class="line">        tab2.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        tab2.setTag(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        tab3 = (LinearLayout) findViewById(R.id.tab3);</span><br><span class="line">        tab3.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        tab3.setTag(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        fragmentArrayList = <span class="keyword">new</span> ArrayList&lt;Fragment&gt;(<span class="number">3</span>);</span><br><span class="line">        fragmentArrayList.add(<span class="keyword">new</span> Tab1Fragment());</span><br><span class="line">        fragmentArrayList.add(<span class="keyword">new</span> Tab2Fragment());</span><br><span class="line">        fragmentArrayList.add(<span class="keyword">new</span> Tab3Fragment());</span><br><span class="line"></span><br><span class="line">        tab1.setSelected(<span class="keyword">true</span>);</span><br><span class="line">        changeTab(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        changeTab((Integer) v.getTag());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">changeTab</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        currentIndex = index;</span><br><span class="line">        tab1.setSelected(index == <span class="number">0</span>);</span><br><span class="line">        tab2.setSelected(index == <span class="number">1</span>);</span><br><span class="line">        tab3.setSelected(index == <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        FragmentTransaction ft = getSupportFragmentManager().beginTransaction();</span><br><span class="line">        <span class="comment">//判断当前的Fragment是否为空，不为空则隐藏</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != mCurrentFrgment) &#123;</span><br><span class="line">            ft.hide(mCurrentFrgment);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//先根据Tag从FragmentTransaction事物获取之前添加的Fragment</span></span><br><span class="line">        Fragment fragment = getSupportFragmentManager().findFragmentByTag(fragmentArrayList.get(currentIndex).getClass().getName());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == fragment) &#123;</span><br><span class="line">            <span class="comment">//如fragment为空，则之前未添加此Fragment。便从集合中取出</span></span><br><span class="line">            fragment = fragmentArrayList.get(index);</span><br><span class="line">        &#125;</span><br><span class="line">        mCurrentFrgment = fragment;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断此Fragment是否已经添加到FragmentTransaction事物中</span></span><br><span class="line">        <span class="keyword">if</span> (!fragment.isAdded()) &#123;</span><br><span class="line">            ft.add(R.id.fragment, fragment, fragment.getClass().getName());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ft.show(fragment);</span><br><span class="line">        &#125;</span><br><span class="line">        ft.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>fragment</strong><br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tab1Fragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Tab1Fragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span><br><span class="line">                             Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> inflater.<span class="title">inflate</span><span class="params">(R.layout.fragment_tab1, container, <span class="keyword">false</span>)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onViewCreated</span><span class="params">(View view, Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onViewCreated(view, savedInstanceState);</span><br><span class="line">        <span class="keyword">final</span> ProgressBar progressBar = (ProgressBar) view.findViewById(R.id.progressbar);</span><br><span class="line">        <span class="keyword">final</span> TextView tv = (TextView) view.findViewById(R.id.tv);</span><br><span class="line">        <span class="keyword">new</span> Handler().postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                progressBar.setVisibility(View.GONE);</span><br><span class="line">                tv.setVisibility(View.VISIBLE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onAttach</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onAttach(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDetach</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDetach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样做的好处是，每个Fragment切换只进行一次初始化。</p>
<h1 id="效果图">效果图</h1><p> <img src="https://raw.githubusercontent.com/Waylenw/AndroidDemo_Waylen/master/screen/fragmentchange.gif" alt="此处输入图片的描述"></p>
<h1 id="源代码">源代码</h1><p> <a href="https://github.com/Waylenw/AndroidDemo_Waylen" target="_blank" rel="external">github</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>fragment切换？不就是Viewpager+fragment吗？是的这是很大多数App采用的切换的组合方式。但是Viewpager+fragment切换的的生命周期十分混乱，这就是会引发很多的坑！如果在一些不需要切换的动画的情况下，采用Frag]]>
    </summary>
    
      <category term="Android" scheme="http://waylenw.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Google相关服务汇总]]></title>
    <link href="http://waylenw.github.io/mobile/google-service-all/"/>
    <id>http://waylenw.github.io/mobile/google-service-all/</id>
    <published>2015-09-29T16:00:00.000Z</published>
    <updated>2015-10-17T01:31:45.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><strong><a href="https://store.google.com/" target="_blank" rel="external">google商店</a></strong><br>购买nexus系列手机,平板,android wear系统产品<br>目前国内的ip(非Vpn工具fq)是无法访问Google store的。只能通过VPN访问。</li>
</ol>
<ol>
<li><strong><a href="https://play.google.com/store" target="_blank" rel="external">google play</a></strong><br>Android官方的APP商店。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><strong><a href="https://store.google.com/" target="_blank" rel="external">google商店</a></strong><br>购买nexus系列手机,平板,android wear系统产品]]>
    </summary>
    
      <category term="mobile" scheme="http://waylenw.github.io/tags/mobile/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[电商、营销、移动互联网等专业词汇大全]]></title>
    <link href="http://waylenw.github.io/Internet/Internet-Professionalwords/"/>
    <id>http://waylenw.github.io/Internet/Internet-Professionalwords/</id>
    <published>2015-09-25T16:00:00.000Z</published>
    <updated>2015-10-17T01:31:45.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong><a href="http://mp.weixin.qq.com/s?__biz=MjM5NTk3MTc5Mw==&amp;mid=216284279&amp;idx=2&amp;sn=9278767efdab72d87ef5bd830eddeeca&amp;scene=0#rd" target="_blank" rel="external">本文原链接</a></strong></p>
</blockquote>
<h1 id="问题一：最常在媒体以及大牛们口中说的各种X2X指的是什么">问题一：最常在媒体以及大牛们口中说的各种X2X指的是什么</h1><p> <strong>电子商务模式</strong></p>
<p> B2B（经济组织对经济组织）</p>
<p>B2C（经济组织对消费者）</p>
<p>B2B2C（企业对企业对消费者）</p>
<p>C2B（T）（消费者集合竞价-团购）</p>
<p>C2C（消费者对消费者）</p>
<p>B2F（企业对家庭）</p>
<p>O2O（网上与网下相结合）</p>
<p>SaaS（软件服务）</p>
<p>PaaS（平台服务）</p>
<p>IaaS（基础服务）</p>
<p>M-B（移动电子商务）</p>
<p>B2G（政府采购）</p>
<p>G2B（政府抛售）</p>
<p>B2M（面向市场营销的电子商务企业）</p>
<p>M2C（生产厂商对消费者）</p>
<p>SoLoMo（社交+本地化+移动）</p>
<p>ABC（代理商-商家-消费者）</p>
<p>BAB（企业-联盟-企业）</p>
<p>P2C（生活服务平台）</p>
<p>P2P（点对点、渠道对渠道）</p>
<p>SNS-EC（社会化网络电子商务）</p>
<p>B2S（分享式商务，或体验式商务）</p>
<h1 id="问题二：O2O、C2C、B2B、B2C的区别在哪里？">问题二：O2O、C2C、B2B、B2C的区别在哪里？</h1><p> <strong>1、O2O是online to offline分为四种运营模式：</strong></p>
<p> 1）online to offline是线上交易到线下消费体验</p>
<p> 2）offline to online是线下营销到线上交易</p>
<p> 3）offline to online to offline是线下营销到线上交易再到线下消费体验</p>
<p> 4）online to offline to online是线上交易或营销到线下消费体验再到线上消费体验</p>
<p> <strong>2、通过举例说区别。</strong></p>
<p> 1）O2O，比如：保险直购O2O，苏宁易购O2O，大众点评O2O等</p>
<p> 2）C2C是consumer to consumer就是个人对个人的，比如淘宝的小店铺。</p>
<p> 3）B2C是business to consumer是商家对个人，这个就很多了卓越、当当、京东等等都是。B2C、C2C很重要的一点是都运用了物流。</p>
<p> 4）B2B是business to business是企业间的，比如阿里巴巴。</p>
<p> <strong>举例通俗说明一下，就是:</strong></p>
<p> 1）C2C就是我卖东西你来买</p>
<p> 2）B2C就是我成立个公司卖东西，你来买</p>
<p> 3）O2O就是我成立个公司卖东西你来买但是要你自己来拿</p>
<p> 4）B2B就是你也成立了公司买我公司的东西</p>
<h1 id="问题三：移动互联网最常出现的名词有哪些？（非专业慎入）">问题三：移动互联网最常出现的名词有哪些？（非专业慎入）</h1><p> <strong>广告形式</strong></p>
<p> Rich Media：(富媒体)，这种应用采取了所有适合的最先进技术，以最好的传达广告主的信息，甚至与用户进行互动！如视频、flash广告等<br> 植入式广告：在电影或电视剧或者其它场景插入相关的广告。如变形金刚，非诚勿扰等。</p>
<p> SEM：Search Engine Marketing的缩写，意即搜索引擎营销。</p>
<p> SEO：SearchEngineOptimization，搜索引擎优化。</p>
<p> EDM：Electronic Direct Marketing的缩写，就是电子邮件营销。</p>
<p> AdWords：Google的关键词竞价广告。</p>
<p> Banner：横幅广告</p>
<p> Button：图标广告</p>
<p> PR推广：软文推广</p>
<p> Adertorial：软文广告的一种，即付费文章，故意设计成像一篇普通的文章。</p>
<p> Banner Ad：（横幅广告）网页顶部、底部或者侧边的广告展示位置；</p>
<p> DSP展示广告：是Demand-Side Platform的缩写，即需求方平台。</p>
<p> POP：Point Of Purchase，意为“卖点广告”，又名「店头陈设」。本来是指商业销售中的一种店头促销工具，其型式不拘，但以摆设在店头的展示物为主，如吊牌、海报、小贴纸、纸货架、展示架、纸堆头、大招牌、实物模型、旗帜等等，都是林立在POP的范围内。</p>
<p> <strong>推广模式分类</strong></p>
<p> CPS：Cost Per Sales的缩写,即销售分成。</p>
<p> CPA ：Cost Per Action，每次动作成本。</p>
<p> CPM：Cost Per Mille，或者Cost Per Thousand，即每千人成本。</p>
<p> CPC：Cost Per Click；Cost Per Thousand Click-Through，即每点击成本。</p>
<p> CPR：Cost Per Response，即每回应成本。</p>
<p> CPP：Cost Per Purchase，即每购买成本。</p>
<p> <strong>点击及转化</strong></p>
<p> UV： Unique Vister的缩写，独立访客。</p>
<p> PV： page view，即网站被浏览的总次数；</p>
<p> IP： 即internet protocol,指独立IP数，一天内相同IP地址只被计算一次；</p>
<p> PR值： 全称为Pagerank（网页级别），是用于评测一个网页“重要性”的一种方法。</p>
<p> Alexa： Alexa.com是专门发布网站世界排名的网站，网站排名有两种：综合排名和分类排名。</p>
<p> Click：（点击量/点击次数）即Click through，用户点击广告的次数，评估广告效果的指标之一；</p>
<p> Click Rate：（点击率/点进率）即Click through-Rate;即网络广告被点击的次数与访问次数的比例，即clicks/impressions.如果这个页面被访问了100次，而页面上的广告也被点击了20次，那么CTR为20%，CTR是评估广告效果的指标之一。</p>
<p> ROI：Return On Investment的缩写，投资报酬率。</p>
<p> CR 转化率：Conversion Rate的缩写，是指访问某一网站访客中，转化的访客占全部访客的比例。</p>
<p> 二跳率：网站页面展开后，用户在页面上产生的首次点击被称为 “二跳”，二跳的次数即为”二跳量”，二跳量与浏览量的比值称为页面的二跳率。</p>
<p> 跳出率： 跳出率是指浏览了一个页面就离开的用户占一组页面或一个页面访问次数的百分比。</p>
<p> 人均访问页面：PV总和除以IP=人均访问页面。人均访问页面&gt;=10个，才算优质用户。</p>
<p> 重复购买率：指消费者在网站中的重复购买次数；<br> 客单价：是指每一个订单的平均购买商品金额，也就是平均交易金额。</p>
<h1 id="问题四：电商营销方式有哪些？">问题四：电商营销方式有哪些？</h1><p>网络媒体：门户网站广告，客户端软件广告。</p>
<p>SEM： 竞价排名，联盟广告。</p>
<p>EDM：内部邮件群发，第三方平台，数据库整合营销等方式。</p>
<p>社区营销：BBS推广（发帖和活动） SNS（微博、微信、QQ群推广等）。</p>
<p>CPS\代销：销售分成（一起发，成果网，创盟）。</p>
<p>SEO：搜索引擎优化。</p>
<p>积分营销：积分兑换，积分打折，积分购买等。</p>
<p>DM目录：传统单张目录，如麦考林，红孩子，凡客。</p>
<p>线下活动：会展，体验店等。</p>
<p>传统媒体：电视电台，报刊杂志。</p>
<h1 id="问题五：电商营销数字化参照标准有哪些指标？">问题五：电商营销数字化参照标准有哪些指标？</h1><p><strong>[访问页面]：</strong></p>
<p>网络推广的访问者访问 &gt;=5个页面以上才是有效流量。</p>
<p>访问&gt;=10个页面以上是高质量的流量，访问2个以下页面是垃圾流量。</p>
<p>访问页面=70%是高质量流量。</p>
<p><strong>[停留时间]：</strong></p>
<p>超过3分钟才是有效流量；</p>
<p>超过6分钟是高质量流量；</p>
<p>小于1分钟的是垃圾流量。</p>
<p><strong>[二跳率数据]：</strong></p>
<p>推广来主页二跳率70%以上是高质量流量。</p>
<p><strong>[转化率数据]：</strong></p>
<p>推广购买转化率&gt;=1%以上为高质量流量。</p>
<p><strong>[动销率]：</strong></p>
<p>商品动销率=动销品种数 ÷ 门店经营总品种数*100% 。</p>
<p><strong>[动销品种数]：</strong></p>
<p>门店中所有商品种类中有销售的商品种类总数。</p>
<p><strong>[商品动销率]</strong></p>
<p>商品累计销售数量 ÷商品期末库存数量</p>
<p><strong>[流量需要辩别好]：</strong></p>
<p>真实流量与流量，</p>
<p>有效流量与流量，</p>
<p>自然流量与购买流量，</p>
<p>PV高的流量与PV低的流量，</p>
<p>商业流量与娱乐流量。</p>
<h1 id="问题六：数字化工具汇总，我们关注的">问题六：数字化工具汇总，我们关注的</h1><p>访问量查询： alexa，chinaz查询工具。</p>
<p>网络流行度： 搜索网站名，搜索结果越多相对来说越流行。</p>
<p>行业排名： 查询艾瑞的排名。</p>
<p>网络新闻曝光率：用baidu新闻搜索。</p>
<p>SEO表现： 收录与PR，排名。</p>
<p>百度指数： 百度指数是用以反映关键词在过去30天内的网络曝光率及用<br>户关注度。</p>
<p>每天新增注册用户数 ＝UV*1%（参考数据）</p>
<p>活跃用户 ＝注册用户/10（参考数据）</p>
<p>最高同时在线 ＝活跃用户*20%（参考数据）</p>
<p>收费交易客户数 ＝活跃用户*5%（参考数据）</p>
<p>销售额： 收费交易客户数*商品平均价格</p>
<p>客单价: per customer transaction 零售术语又称ATV，即每位顾客平均购买商品金额</p>
<h1 id="问题七：电子商务公司职位，你想干哪个？（别想歪。。。）">问题七：电子商务公司职位，你想干哪个？（别想歪。。。）</h1><p>UI 即User Interface（用户界面）的简称。UI设计则是指对软件的人机交互、操作逻辑、界面美观的整体设计.。</p>
<p>TD 即技术部研发简称TDD–Technology Development Department</p>
<p>JS 即JavaScript 前端开发。</p>
<p>DZ 即页面重构，页面制作。</p>
<p>PM 即项目经理。</p>
<p>PDM 即产品经理。</p>
<p>UED 即用户体验设计，交互设计。</p>
<p>Operation Manager 即运营经理。</p>
<p>问题八：商品物流及客户管理方面专业名词知多少？</p>
<p><strong>QC</strong></p>
<p>即英文Quality Control的简称，中文意义是品质控制，又称质检，即对产品进行一个初步的检验，排除质量问题。</p>
<p><strong>SKU</strong></p>
<p>即英文Stock Keeping Unit的简称，即库存进出计量的单位，可以是以件，盒，托盘等为单位。保存库存控制的最小可用单位。</p>
<p><strong>3PL</strong></p>
<p>即第三方物流（Third Party Logistics），电商行业意指快递公司。</p>
<p><strong>PCS</strong></p>
<p>即计量单位的简写，即pieces一块、件、片、篇、张、条、套。多见于外贸交易中，后为书写方便，延伸到其他行业，可代表个、包、袋等表示数量的产品。</p>
<p><strong>商品编码</strong></p>
<p>企业生产商品入库的数字身份证，正规厂家都会有一个全球通用、唯一的商品编码。</p>
<p><strong>商品条码</strong></p>
<p>是由一组按一定规则排列的条、空及对应字符数字组成的用于表示上点自动销售管理系统的信息标记或者对商品分类编码进行表示的标记。</p>
<p><strong>实际库存</strong></p>
<p>实际仓库中的实际库存量。</p>
<p><strong>虚拟库存</strong></p>
<p>即网站前台展示的库存数量，是电商行业特定属性的产物，日常操作中，经常有消费者仙丹后可能不会付款，商品不做时间出库操作，但是前台页面库存已减少，为了不影响前台展现的库存量，因此需要设置一个虚拟库存。</p>
<p><strong>库存预警</strong></p>
<p>库存预警是指设置一个库存警戒线，当仓库实际库存到达仓库警戒线的时候就会提醒你补货，库存警戒线设置可参考该商品平时销量情况考虑。</p>
<p><strong>ITO库存周转率</strong></p>
<p>Inventory turn over，一般缩写为ITO，一种衡量材料在工厂里或是整条价值流中，流动快慢的标准。最常见的计算库存周转的方法，就是把年度销售产品的成本（不计销售的开支以及管理成本）作为分子，除以年度平均库存价值，即：库存周转率=年度销售产品成本/当年平均库存价值</p>
<p><strong>【物流配送】</strong></p>
<p>SRM 是Supplier Relationship Management的缩写，即供应商关系管理。</p>
<p>ERP 是Enterprise Resource Planning的缩写，即企业资源计划。</p>
<p>OMS 是Order Management System的缩写，即订单管理系统。</p>
<p><strong>【客户管理】</strong></p>
<p><strong>CRM</strong></p>
<p>是Customer Relationship Management的缩写，即客户关系管理。</p>
<p><strong>RFM</strong></p>
<p>模型是衡量客户价值和客户创利能力的重要工具和手段。该机械模型通过一个客户的近期购买行为、购买的总体频率以及花了多少钱三项指标来描述该客户的价值状况。</p>
<p><strong>【WEB产品设计】</strong></p>
<p><strong>用户界面UI：</strong></p>
<p>User Interface（用户界面）的简称，UI设计则是指对页面的人机交互、操作逻辑、界面美观的整体设计。</p>
<p><strong>用户体验UE：</strong></p>
<p>User Experience（用户体验）的简称。它是指用户访问一个网站或者使用一个产品时的全部体验。</p>
<p>问题九：前方高能，你确定你数学学好了？—-数据比例换算公式</p>
<p>老客户 =回头率*客户数</p>
<p>回头率 =回头客人/店铺总访客数</p>
<p>新客户 =客户数-老客户</p>
<p>转换率 =客户数/UV</p>
<p>点击率 =点击数/页面展现</p>
<p>PV利用率 =客户数/PV</p>
<p>客户月增长率 =当月客户数/当月客户数— 1</p>
<p>客单价 =支付宝成交金额/支付宝成交笔数</p>
<p>页面打开率 =从首页点击进入宝贝页的次数/首页浏览量</p>
<p>人均访问页面数 =PV/UV（浏览人数/页面总访问人数）</p>
<p>人均店内停留时间 =总访问时长/UV</p>
<p>收藏率 =当天收藏量/UV</p>
<p>宝贝跳失率 =只访问了该宝贝一个页面就离开的访问次数/该宝贝总访问次数</p>
<p>库存周转率 =年度销售产品成本/当年平均库存价值</p>
<p>商品动销率 =动销品种数 ÷ 门店经营总品种数*100% 。</p>
<p>CPC =财务消耗/点击数</p>
<p>CPM =财务消耗/广告有效展现量*1000</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong><a href="http://mp.weixin.qq.com/s?__biz=MjM5NTk3MTc5Mw==&amp;mid=216284279&amp;idx=2&amp;sn=9278767efdab72d87ef5bd8]]>
    </summary>
    
      <category term="互联网" scheme="http://waylenw.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo搭建博客之环境搭建和配置(一)]]></title>
    <link href="http://waylenw.github.io/hexo/hexo-one/"/>
    <id>http://waylenw.github.io/hexo/hexo-one/</id>
    <published>2015-09-08T16:00:00.000Z</published>
    <updated>2015-11-14T08:25:09.000Z</updated>
    <content type="html"><![CDATA[<h1 id="简介">简介</h1><p>   Hexo是由一个台湾的大神弄出来的东东。可以使用此工具来生成个人博客。很神奇高大上的东东。<br>   大神的博客:<a href="http://zespia.tw/" target="_blank" rel="external">http://zespia.tw/</a><br>   hexo官网:<a href="https://hexo.io/" target="_blank" rel="external">https://hexo.io/</a></p>
<h1 id="1-_安装Git">1. 安装Git</h1><p>   如何安装git详情查看</p>
<h1 id="2-_安装Node-js">2. 安装Node.js</h1><p>  下载：<a href="http://nodejs.org/download/" target="_blank" rel="external">http://nodejs.org/download/</a></p>
<p>  可以下载 node-v0.10.33-x64.msi</p>
<p>  安装时直接保持默认配置即可。</p>
<h1 id="3-环境配置">3.环境配置</h1><h2 id="3-1安装Hexo">3.1安装Hexo</h2><p> windows鼠标右键==&gt;git bash</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo</span></span><br></pre></td></tr></table></figure>
<p>   等待安装完毕就可以了</p>
<p>   <strong>这里注意:</strong>mac安装的或有不同，详情请参照hexo官网<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/index.html</a></p>
<h2 id="3-2初始化hexo的文件">3.2初始化hexo的文件</h2><p> mac初始化hexo文件<br>  <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> init hexo-lcx</span><br></pre></td></tr></table></figure></p>
<p>  在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。执行下面的命令<br><br>   <figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo init</span><br></pre></td></tr></table></figure></p>
<h2 id="3-3安装依赖包">3.3安装依赖包</h2><p> 先执行下面的代码，一般需要等待一段时间。成功后可以看到xxx文件夹<br>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure></p>
<p>  以下命令都是要执行的<br>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git</span><br></pre></td></tr></table></figure></p>
<h2 id="3-4启动服务">3.4启动服务</h2><pre><code>hexo <span class="keyword">server</span>
</code></pre><p>用浏览器打开<a href="http://localhost:4000/或者http://127.0.0.1:4000/就能看到网页了" target="_blank" rel="external">http://localhost:4000/或者http://127.0.0.1:4000/就能看到网页了</a><br>推荐使用现代化浏览器(Chrome)获得最佳效果<br>按Ctrl+C停止本地预览服务</p>
<h2 id="3-5添加一篇自己的文章">3.5添加一篇自己的文章</h2><p> hexo是支持markdown，创建完成后可以进入提示的路径修改文本*.md的内容<br>  <figure class="highlight"><figcaption><span>hexo new "My New Post"</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[info] File created at d:\Hexo\source\_posts\My-New-Post.md</span><br></pre></td></tr></table></figure></p>
<p> 执行完命令重复3.4的命令</p>
<h1 id="4-hexo的基本讲解">4.hexo的基本讲解</h1><h2 id="4-1_目录结构">4.1 目录结构</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Hexo Configuration</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="preprocessor">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Site #站点信息</span></span><br><span class="line"><span class="label">title:</span> Waylenwang <span class="preprocessor">#标题</span></span><br><span class="line"><span class="label">subtitle:</span> 专注互联网 <span class="preprocessor">#副标题</span></span><br><span class="line"><span class="label">description:</span> waylenwang <span class="preprocessor">#站点描述，给搜索引擎看的</span></span><br><span class="line"><span class="label">author:</span> waylenwang <span class="preprocessor">#作者</span></span><br><span class="line"><span class="label">email:</span>  <span class="preprocessor">#电子邮箱</span></span><br><span class="line"><span class="label">language:</span> <span class="built_in">zh</span>-CN <span class="preprocessor">#语言</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># URL #链接格式</span></span><br><span class="line"><span class="label">url:</span> http://waylenwang.github.io <span class="preprocessor">#网址</span></span><br><span class="line"><span class="label">root:</span> / <span class="preprocessor">#根目录</span></span><br><span class="line"><span class="label">permalink:</span> :year/:month/:day/:title/ <span class="preprocessor">#文章的链接格式</span></span><br><span class="line"><span class="label">tag_dir:</span> tags <span class="preprocessor">#标签目录</span></span><br><span class="line"><span class="label">archive_dir:</span> archives <span class="preprocessor">#存档目录</span></span><br><span class="line"><span class="label">category_dir:</span> categories <span class="preprocessor">#分类目录</span></span><br><span class="line"><span class="label">code_dir:</span> downloads/code</span><br><span class="line"><span class="label">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Directory #目录</span></span><br><span class="line"><span class="label">source_dir:</span> source <span class="preprocessor">#源文件目录</span></span><br><span class="line"><span class="label">public_dir:</span> public <span class="preprocessor">#生成的网页文件目录</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Writing #写作</span></span><br><span class="line"><span class="label">new_post_name:</span> :title.md <span class="preprocessor">#新文章标题</span></span><br><span class="line"><span class="label">default_layout:</span> post <span class="preprocessor">#默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）</span></span><br><span class="line"><span class="label">titlecase:</span> false <span class="preprocessor">#标题转换成大写</span></span><br><span class="line"><span class="label">external_link:</span> true <span class="preprocessor">#在新选项卡中打开连接</span></span><br><span class="line"><span class="label">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="label">render_drafts:</span> false</span><br><span class="line"><span class="label">post_asset_folder:</span> false</span><br><span class="line"><span class="label">relative_link:</span> false</span><br><span class="line"><span class="label">highlight:</span> <span class="preprocessor">#语法高亮</span></span><br><span class="line">  enable: true <span class="preprocessor">#是否启用</span></span><br><span class="line">  line_number: true <span class="preprocessor">#显示行号</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Category &amp; Tag #分类和标签</span></span><br><span class="line"><span class="label">default_category:</span> uncategorized <span class="preprocessor">#默认分类</span></span><br><span class="line"><span class="label">category_map:</span></span><br><span class="line"><span class="label">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Archives</span></span><br><span class="line"><span class="number">2</span>: 开启分页</span><br><span class="line"><span class="number">1</span>: 禁用分页</span><br><span class="line"><span class="number">0</span>: 全部禁用</span><br><span class="line"><span class="label">archive:</span> <span class="number">2</span></span><br><span class="line"><span class="label">category:</span> <span class="number">2</span></span><br><span class="line"><span class="label">tag:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Server #本地服务器</span></span><br><span class="line"><span class="label">port:</span> <span class="number">4000</span> <span class="preprocessor">#端口号</span></span><br><span class="line"><span class="label">server_ip:</span> localhost <span class="preprocessor">#IP 地址</span></span><br><span class="line"><span class="label">logger:</span> false</span><br><span class="line"><span class="label">logger_format:</span> dev</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Date / Time format #日期时间格式</span></span><br><span class="line"><span class="label">date_format:</span> YYYY-MM-DD <span class="preprocessor">#参考http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="label">time_format:</span> H:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Pagination #分页</span></span><br><span class="line"><span class="label">per_page:</span> <span class="number">10</span> <span class="preprocessor">#每页文章数，设置成 0 禁用分页</span></span><br><span class="line"><span class="label">pagination_dir:</span> page</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Disqus #Disqus评论，替换为多说</span></span><br><span class="line"><span class="label">disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Extensions #拓展插件</span></span><br><span class="line"><span class="label">theme:</span> landscape-plus <span class="preprocessor">#主题</span></span><br><span class="line"><span class="label">exclude_generator:</span></span><br><span class="line"></span><br><span class="line"><span class="label">plugins:</span> <span class="preprocessor">#插件，例如生成 RSS 和站点地图的</span></span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Deployment #部署</span></span><br><span class="line"><span class="label">deploy:</span></span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Waylenwang/Waylenwang.github.io.git   <span class="preprocessor">#或者是https://github.com/Waylenwang/Waylenwang.github.io.git</span></span><br></pre></td></tr></table></figure>
<h2 id="4-2常用命令">4.2常用命令</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo help <span class="preprocessor">#查看帮助</span></span><br><span class="line">hexo init <span class="preprocessor">#初始化一个目录</span></span><br><span class="line">hexo <span class="keyword">new</span> <span class="string">"postName"</span> <span class="preprocessor">#新建文章</span></span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">"pageName"</span> <span class="preprocessor">#新建页面</span></span><br><span class="line">hexo generate <span class="preprocessor">#生成网页，可以在 public 目录查看整个网站的文件</span></span><br><span class="line">hexo <span class="keyword">server</span> <span class="preprocessor">#本地预览，'Ctrl+C'关闭</span></span><br><span class="line">hexo deploy <span class="preprocessor">#部署.deploy目录</span></span><br><span class="line">hexo clean <span class="preprocessor">#清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**</span></span><br></pre></td></tr></table></figure>
<p>命令简写<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">n</span> == hexo new</span><br><span class="line">hexo <span class="keyword">g</span> == hexo <span class="keyword">generate</span></span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo <span class="keyword">d</span> == hexo deploy</span><br></pre></td></tr></table></figure></p>
<h1 id="5-发布">5.发布</h1><h1 id="5-1创建github仓库">5.1创建github仓库</h1> <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">名字必须是:   your_github_name<span class="class">.github</span><span class="class">.io</span></span><br><span class="line">例如我的:     Waylenwang<span class="class">.github</span><span class="class">.io</span></span><br></pre></td></tr></table></figure>
<h2 id="5-2修改_config-yml">5.2修改_config.yml</h2><p>编辑全局配置文件 _config.yml 中的 deploy 部分<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Waylenwang/Waylenwang.github.io.git</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p>
<h2 id="5-3部署">5.3部署</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean<span class="comment">//清理数据缓存，建议每次都清楚</span></span><br><span class="line">hexo <span class="keyword">d</span> <span class="comment">//部署</span></span><br></pre></td></tr></table></figure>
<p>部署成功的信息<br>    [info] Deploy done: github</p>
<h2 id="5-4成功">5.4成功</h2><p>   在浏览器输入<a href="http://waylenw.github.io/">http://waylenwang.github.io/</a>就能看到网页了。</p>
<p><strong><a href="http://waylenw.github.io/hexo/hexo-two/">hexo搭建博客之更换主题以及博客基本配置(二)</a></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="简介">简介</h1><p>   Hexo是由一个台湾的大神弄出来的东东。可以使用此工具来生成个人博客。很神奇高大上的东东。<br>   大神的博客:<a href="http://zespia.tw/" target="_blank" rel="external]]>
    </summary>
    
      <category term="hexo" scheme="http://waylenw.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
